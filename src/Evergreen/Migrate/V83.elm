module Evergreen.Migrate.V83 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import AssocList
import AssocSet
import Bitwise
import Dict
import Evergreen.V82.Animal
import Evergreen.V82.Bounds
import Evergreen.V82.Change
import Evergreen.V82.Color
import Evergreen.V82.Coord
import Evergreen.V82.Cursor
import Evergreen.V82.DisplayName
import Evergreen.V82.EmailAddress
import Evergreen.V82.Geometry.Types
import Evergreen.V82.Grid
import Evergreen.V82.GridCell
import Evergreen.V82.Id
import Evergreen.V82.IdDict
import Evergreen.V82.MailEditor
import Evergreen.V82.Point2d
import Evergreen.V82.Postmark
import Evergreen.V82.Route
import Evergreen.V82.Tile
import Evergreen.V82.Train
import Evergreen.V82.Types
import Evergreen.V82.Units
import Evergreen.V82.User
import Evergreen.V83.Animal
import Evergreen.V83.Bounds
import Evergreen.V83.Change
import Evergreen.V83.Color
import Evergreen.V83.Coord
import Evergreen.V83.Cursor
import Evergreen.V83.DisplayName
import Evergreen.V83.EmailAddress
import Evergreen.V83.Geometry.Types
import Evergreen.V83.Grid
import Evergreen.V83.GridCell
import Evergreen.V83.Id
import Evergreen.V83.IdDict
import Evergreen.V83.MailEditor
import Evergreen.V83.Point2d
import Evergreen.V83.Postmark
import Evergreen.V83.Route
import Evergreen.V83.Tile
import Evergreen.V83.Train
import Evergreen.V83.Types
import Evergreen.V83.Units
import Evergreen.V83.User
import Lamdera.Migrations exposing (..)
import List
import List.Nonempty
import Maybe
import Quantity exposing (Quantity(..))


frontendModel : Evergreen.V82.Types.FrontendModel -> ModelMigration Evergreen.V83.Types.FrontendModel Evergreen.V83.Types.FrontendMsg
frontendModel old =
    ModelUnchanged


backendModel : Evergreen.V82.Types.BackendModel -> ModelMigration Evergreen.V83.Types.BackendModel Evergreen.V83.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V82.Types.FrontendMsg -> MsgMigration Evergreen.V83.Types.FrontendMsg Evergreen.V83.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V82.Types.ToBackend -> MsgMigration Evergreen.V83.Types.ToBackend Evergreen.V83.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V82.Types.BackendMsg -> MsgMigration Evergreen.V83.Types.BackendMsg Evergreen.V83.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V82.Types.ToFrontend -> MsgMigration Evergreen.V83.Types.ToFrontend Evergreen.V83.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_BackendModel : Evergreen.V82.Types.BackendModel -> Evergreen.V83.Types.BackendModel
migrate_Types_BackendModel old =
    { grid = old.grid |> migrate_Grid_Grid
    , userSessions =
        old.userSessions
            |> Dict.map
                (\k ->
                    \rec ->
                        { clientIds = rec.clientIds |> migrate_AssocList_Dict identity (migrate_Bounds_Bounds migrate_Units_CellUnit)
                        , userId = rec.userId |> Maybe.map (migrate_Id_Id migrate_Id_UserId)
                        }
                )
    , users = old.users |> migrate_IdDict_IdDict migrate_Id_UserId migrate_Types_BackendUserData
    , secretLinkCounter = old.secretLinkCounter
    , errors = old.errors |> List.map (Tuple.mapSecond migrate_Types_BackendError)
    , trains = old.trains |> migrate_IdDict_IdDict migrate_Id_TrainId migrate_Train_Train
    , cows = old.cows |> migrate_IdDict_IdDict migrate_Id_AnimalId migrate_Animal_Animal
    , lastWorldUpdateTrains = old.lastWorldUpdateTrains |> migrate_IdDict_IdDict migrate_Id_TrainId migrate_Train_Train
    , lastWorldUpdate = old.lastWorldUpdate
    , mail = old.mail |> migrate_IdDict_IdDict migrate_Id_MailId migrate_MailEditor_BackendMail
    , pendingLoginTokens =
        old.pendingLoginTokens
            |> migrate_AssocList_Dict (migrate_Id_SecretId migrate_Route_LoginToken)
                (\rec ->
                    { requestTime = rec.requestTime
                    , userId = rec.userId |> migrate_Id_Id migrate_Id_UserId
                    , requestedBy = rec.requestedBy |> migrate_Types_LoginRequestedBy
                    }
                )
    , invites = old.invites |> migrate_AssocList_Dict (migrate_Id_SecretId migrate_Route_InviteToken) migrate_Types_Invite
    , lastCacheRegeneration = old.lastCacheRegeneration
    , reported = old.reported |> migrate_IdDict_IdDict migrate_Id_UserId (migrate_List_Nonempty_Nonempty migrate_Change_BackendReport)
    , isGridReadOnly = old.isGridReadOnly
    , trainsDisabled = old.trainsDisabled |> migrate_Change_AreTrainsDisabled
    , lastReportEmailToAdmin = old.lastReportEmailToAdmin
    }


migrate_Animal_Animal : Evergreen.V82.Animal.Animal -> Evergreen.V83.Animal.Animal
migrate_Animal_Animal old =
    { position = old.position |> migrate_Point2d_Point2d migrate_Units_WorldUnit migrate_Units_WorldUnit
    , animalType = old.animalType |> migrate_Animal_AnimalType
    }


migrate_Animal_AnimalType : Evergreen.V82.Animal.AnimalType -> Evergreen.V83.Animal.AnimalType
migrate_Animal_AnimalType old =
    case old of
        Evergreen.V82.Animal.Cow ->
            Evergreen.V83.Animal.Cow

        Evergreen.V82.Animal.Hamster ->
            Evergreen.V83.Animal.Hamster

        Evergreen.V82.Animal.Sheep ->
            Evergreen.V83.Animal.Sheep


migrate_AssocList_Dict : (a_old -> a_new) -> (b_old -> b_new) -> AssocList.Dict a_old b_old -> AssocList.Dict a_new b_new
migrate_AssocList_Dict migrate_a migrate_b old =
    old
        |> AssocList.toList
        |> List.map (Tuple.mapBoth migrate_a migrate_b)
        |> AssocList.fromList


migrate_AssocSet_Set : (a_old -> a_new) -> AssocSet.Set a_old -> AssocSet.Set a_new
migrate_AssocSet_Set migrate_a old =
    old |> AssocSet.map migrate_a


migrate_Bounds_Bounds : (unit_old -> unit_new) -> Evergreen.V82.Bounds.Bounds unit_old -> Evergreen.V83.Bounds.Bounds unit_new
migrate_Bounds_Bounds migrate_unit old =
    case old of
        Evergreen.V82.Bounds.Bounds p0 ->
            Evergreen.V83.Bounds.Bounds
                { min = p0.min |> migrate_Coord_Coord migrate_unit
                , max = p0.max |> migrate_Coord_Coord migrate_unit
                }


migrate_Change_AreTrainsDisabled : Evergreen.V82.Change.AreTrainsDisabled -> Evergreen.V83.Change.AreTrainsDisabled
migrate_Change_AreTrainsDisabled old =
    case old of
        Evergreen.V82.Change.TrainsDisabled ->
            Evergreen.V83.Change.TrainsDisabled

        Evergreen.V82.Change.TrainsEnabled ->
            Evergreen.V83.Change.TrainsEnabled


migrate_Change_BackendReport : Evergreen.V82.Change.BackendReport -> Evergreen.V83.Change.BackendReport
migrate_Change_BackendReport old =
    { reportedUser = old.reportedUser |> migrate_Id_Id migrate_Id_UserId
    , position = old.position |> migrate_Coord_Coord migrate_Units_WorldUnit
    , reportedAt = old.reportedAt
    }


migrate_Color_Color : Evergreen.V82.Color.Color -> Evergreen.V83.Color.Color
migrate_Color_Color old =
    case old of
        Evergreen.V82.Color.Color p0 ->
            Evergreen.V83.Color.Color p0


migrate_Color_Colors : Evergreen.V82.Color.Colors -> Evergreen.V83.Color.Colors
migrate_Color_Colors old =
    { primaryColor = old.primaryColor |> migrate_Color_Color
    , secondaryColor = old.secondaryColor |> migrate_Color_Color
    }


migrate_Coord_Coord : (units_old -> units_new) -> Evergreen.V82.Coord.Coord units_old -> Evergreen.V83.Coord.Coord units_new
migrate_Coord_Coord migrate_units old =
    old |> Tuple.mapBoth migrate_Quantity_Quantity migrate_Quantity_Quantity


migrate_Cursor_Cursor : Evergreen.V82.Cursor.Cursor -> Evergreen.V83.Cursor.Cursor
migrate_Cursor_Cursor old =
    { position = old.position |> migrate_Point2d_Point2d migrate_Units_WorldUnit migrate_Units_WorldUnit
    , holdingCow =
        old.holdingCow
            |> Maybe.map
                (\rec ->
                    { cowId = rec.cowId |> migrate_Id_Id migrate_Id_AnimalId
                    , pickupTime = rec.pickupTime
                    }
                )
    , currentTool = old.currentTool |> migrate_Cursor_OtherUsersTool
    }


migrate_Cursor_OtherUsersTool : Evergreen.V82.Cursor.OtherUsersTool -> Evergreen.V83.Cursor.OtherUsersTool
migrate_Cursor_OtherUsersTool old =
    case old of
        Evergreen.V82.Cursor.HandTool ->
            Evergreen.V83.Cursor.HandTool

        Evergreen.V82.Cursor.TilePlacerTool ->
            Evergreen.V83.Cursor.TilePlacerTool

        Evergreen.V82.Cursor.TilePickerTool ->
            Evergreen.V83.Cursor.TilePickerTool

        Evergreen.V82.Cursor.EraserTool ->
            Evergreen.V83.Cursor.EraserTool

        Evergreen.V82.Cursor.TextTool p0 ->
            Evergreen.V83.Cursor.TextTool
                (p0
                    |> Maybe.map
                        (\rec1 ->
                            { cursorPosition = rec1.cursorPosition |> migrate_Coord_Coord migrate_Units_WorldUnit
                            }
                        )
                )

        Evergreen.V82.Cursor.ReportTool ->
            Evergreen.V83.Cursor.ReportTool


migrate_DisplayName_DisplayName : Evergreen.V82.DisplayName.DisplayName -> Evergreen.V83.DisplayName.DisplayName
migrate_DisplayName_DisplayName old =
    case old of
        Evergreen.V82.DisplayName.DisplayName p0 ->
            Evergreen.V83.DisplayName.DisplayName p0


migrate_EmailAddress_EmailAddress : Evergreen.V82.EmailAddress.EmailAddress -> Evergreen.V83.EmailAddress.EmailAddress
migrate_EmailAddress_EmailAddress old =
    case old of
        Evergreen.V82.EmailAddress.EmailAddress p0 ->
            Evergreen.V83.EmailAddress.EmailAddress p0


migrate_Geometry_Types_Point2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Evergreen.V82.Geometry.Types.Point2d units_old coordinates_old -> Evergreen.V83.Geometry.Types.Point2d units_new coordinates_new
migrate_Geometry_Types_Point2d migrate_units migrate_coordinates old =
    case old of
        Evergreen.V82.Geometry.Types.Point2d p0 ->
            Evergreen.V83.Geometry.Types.Point2d p0


migrate_GridCell_Cell : Evergreen.V82.GridCell.Cell -> Evergreen.V83.GridCell.Cell
migrate_GridCell_Cell old =
    case old of
        Evergreen.V82.GridCell.Cell p0 ->
            let
                cache =
                    p0.cache |> List.map migrate_GridCell_Value
            in
            Evergreen.V83.GridCell.Cell
                { history = p0.history |> List.map migrate_GridCell_Value
                , undoPoint = p0.undoPoint |> migrate_IdDict_IdDict migrate_Id_UserId identity
                , cache = cache
                , railSplitToggled = p0.railSplitToggled |> migrate_AssocSet_Set (migrate_Coord_Coord migrate_Units_CellLocalUnit)
                , mapCache = updateMapPixelData cache
                }


terrainSize =
    4


xy : Int -> Int -> Evergreen.V83.Coord.Coord units
xy x_ y_ =
    ( Quantity x_, Quantity y_ )


divide : Evergreen.V83.Coord.Coord unit -> Evergreen.V83.Coord.Coord unit -> Evergreen.V83.Coord.Coord unit
divide ( Quantity x0, Quantity y0 ) ( Quantity x1, Quantity y1 ) =
    ( x1 // x0 |> Quantity, y1 // y0 |> Quantity )


localCoordToTerrain :
    Evergreen.V83.Coord.Coord Evergreen.V83.Units.CellLocalUnit
    -> Evergreen.V83.Coord.Coord a
localCoordToTerrain coord =
    divide (xy terrainSize terrainSize) coord |> changeUnit


changeUnit : Evergreen.V83.Coord.Coord a -> Evergreen.V83.Coord.Coord b
changeUnit ( Quantity x_, Quantity y_ ) =
    ( Quantity x_, Quantity y_ )


xRaw : Evergreen.V83.Coord.Coord units -> Int
xRaw ( Quantity x_, _ ) =
    x_


yRaw : Evergreen.V83.Coord.Coord units -> Int
yRaw ( _, Quantity y_ ) =
    y_


updateMapPixelData : List Evergreen.V83.GridCell.Value -> Int
updateMapPixelData cache =
    List.foldl
        (\{ position } mapCache ->
            let
                terrainPos =
                    localCoordToTerrain position

                index : Int
                index =
                    xRaw terrainPos + yRaw terrainPos * 4
            in
            Bitwise.shiftLeftBy index 1 |> Bitwise.or mapCache
        )
        0
        cache


migrate_GridCell_Value : Evergreen.V82.GridCell.Value -> Evergreen.V83.GridCell.Value
migrate_GridCell_Value old =
    { userId = old.userId |> migrate_Id_Id migrate_Id_UserId
    , position = old.position |> migrate_Coord_Coord migrate_Units_CellLocalUnit
    , value = old.value |> migrate_Tile_Tile
    , colors = old.colors |> migrate_Color_Colors
    }


migrate_Grid_Grid : Evergreen.V82.Grid.Grid -> Evergreen.V83.Grid.Grid
migrate_Grid_Grid old =
    case old of
        Evergreen.V82.Grid.Grid p0 ->
            Evergreen.V83.Grid.Grid (p0 |> Dict.map (\k -> migrate_GridCell_Cell))


migrate_IdDict_IdDict : (k_old -> k_new) -> (v_old -> v_new) -> Evergreen.V82.IdDict.IdDict k_old v_old -> Evergreen.V83.IdDict.IdDict k_new v_new
migrate_IdDict_IdDict migrate_k migrate_v old =
    case old of
        Evergreen.V82.IdDict.RBNode_elm_builtin p0 p1 p2 p3 p4 ->
            Evergreen.V83.IdDict.RBNode_elm_builtin (p0 |> migrate_IdDict_NColor)
                p1
                (p2 |> migrate_v)
                (p3 |> migrate_IdDict_IdDict migrate_k migrate_v)
                (p4 |> migrate_IdDict_IdDict migrate_k migrate_v)

        Evergreen.V82.IdDict.RBEmpty_elm_builtin ->
            Evergreen.V83.IdDict.RBEmpty_elm_builtin


migrate_IdDict_NColor : Evergreen.V82.IdDict.NColor -> Evergreen.V83.IdDict.NColor
migrate_IdDict_NColor old =
    case old of
        Evergreen.V82.IdDict.Red ->
            Evergreen.V83.IdDict.Red

        Evergreen.V82.IdDict.Black ->
            Evergreen.V83.IdDict.Black


migrate_Id_AnimalId : Evergreen.V82.Id.AnimalId -> Evergreen.V83.Id.AnimalId
migrate_Id_AnimalId old =
    case old of
        Evergreen.V82.Id.CowId p0 ->
            Evergreen.V83.Id.CowId p0


migrate_Id_Id : (a_old -> a_new) -> Evergreen.V82.Id.Id a_old -> Evergreen.V83.Id.Id a_new
migrate_Id_Id migrate_a old =
    case old of
        Evergreen.V82.Id.Id p0 ->
            Evergreen.V83.Id.Id p0


migrate_Id_MailId : Evergreen.V82.Id.MailId -> Evergreen.V83.Id.MailId
migrate_Id_MailId old =
    case old of
        Evergreen.V82.Id.MailId p0 ->
            Evergreen.V83.Id.MailId p0


migrate_Id_SecretId : (a_old -> a_new) -> Evergreen.V82.Id.SecretId a_old -> Evergreen.V83.Id.SecretId a_new
migrate_Id_SecretId migrate_a old =
    case old of
        Evergreen.V82.Id.SecretId p0 ->
            Evergreen.V83.Id.SecretId p0


migrate_Id_TrainId : Evergreen.V82.Id.TrainId -> Evergreen.V83.Id.TrainId
migrate_Id_TrainId old =
    case old of
        Evergreen.V82.Id.TrainId p0 ->
            Evergreen.V83.Id.TrainId p0


migrate_Id_UserId : Evergreen.V82.Id.UserId -> Evergreen.V83.Id.UserId
migrate_Id_UserId old =
    case old of
        Evergreen.V82.Id.UserId p0 ->
            Evergreen.V83.Id.UserId p0


migrate_List_Nonempty_Nonempty : (a_old -> a_new) -> List.Nonempty.Nonempty a_old -> List.Nonempty.Nonempty a_new
migrate_List_Nonempty_Nonempty migrate_a old =
    old |> List.Nonempty.map migrate_a


migrate_MailEditor_BackendMail : Evergreen.V82.MailEditor.BackendMail -> Evergreen.V83.MailEditor.BackendMail
migrate_MailEditor_BackendMail old =
    { content = old.content |> List.map migrate_MailEditor_Content
    , status = old.status |> migrate_MailEditor_MailStatus
    , from = old.from |> migrate_Id_Id migrate_Id_UserId
    , to = old.to |> migrate_Id_Id migrate_Id_UserId
    }


migrate_MailEditor_Content : Evergreen.V82.MailEditor.Content -> Evergreen.V83.MailEditor.Content
migrate_MailEditor_Content old =
    case old of
        Evergreen.V82.MailEditor.ImageType p0 p1 ->
            Evergreen.V83.MailEditor.ImageType p0 (p1 |> migrate_MailEditor_Image)

        Evergreen.V82.MailEditor.TextType p0 p1 ->
            Evergreen.V83.MailEditor.TextType p0 p1


migrate_MailEditor_Image : Evergreen.V82.MailEditor.Image -> Evergreen.V83.MailEditor.Image
migrate_MailEditor_Image old =
    case old of
        Evergreen.V82.MailEditor.Stamp p0 ->
            Evergreen.V83.MailEditor.Stamp (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.SunglassesEmoji p0 ->
            Evergreen.V83.MailEditor.SunglassesEmoji (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.NormalEmoji p0 ->
            Evergreen.V83.MailEditor.NormalEmoji (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.SadEmoji p0 ->
            Evergreen.V83.MailEditor.SadEmoji (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.Man p0 ->
            Evergreen.V83.MailEditor.Man (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.TileImage p0 p1 p2 ->
            Evergreen.V83.MailEditor.TileImage (p0 |> migrate_Tile_TileGroup)
                p1
                (p2 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.Grass ->
            Evergreen.V83.MailEditor.Grass

        Evergreen.V82.MailEditor.DefaultCursor p0 ->
            Evergreen.V83.MailEditor.DefaultCursor (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.DragCursor p0 ->
            Evergreen.V83.MailEditor.DragCursor (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.PinchCursor p0 ->
            Evergreen.V83.MailEditor.PinchCursor (p0 |> migrate_Color_Colors)

        Evergreen.V82.MailEditor.Line p0 p1 ->
            Evergreen.V83.MailEditor.Line p0 (p1 |> migrate_Color_Color)

        Evergreen.V82.MailEditor.Animal p0 p1 ->
            Evergreen.V83.MailEditor.Animal (p0 |> migrate_Animal_AnimalType)
                (p1 |> migrate_Color_Colors)


migrate_MailEditor_MailStatus : Evergreen.V82.MailEditor.MailStatus -> Evergreen.V83.MailEditor.MailStatus
migrate_MailEditor_MailStatus old =
    case old of
        Evergreen.V82.MailEditor.MailWaitingPickup ->
            Evergreen.V83.MailEditor.MailWaitingPickup

        Evergreen.V82.MailEditor.MailInTransit p0 ->
            Evergreen.V83.MailEditor.MailInTransit (p0 |> migrate_Id_Id migrate_Id_TrainId)

        Evergreen.V82.MailEditor.MailReceived p0 ->
            Evergreen.V83.MailEditor.MailReceived p0

        Evergreen.V82.MailEditor.MailReceivedAndViewed p0 ->
            Evergreen.V83.MailEditor.MailReceivedAndViewed p0


migrate_Point2d_Point2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Evergreen.V82.Point2d.Point2d units_old coordinates_old -> Evergreen.V83.Point2d.Point2d units_new coordinates_new
migrate_Point2d_Point2d migrate_units migrate_coordinates old =
    old |> migrate_Geometry_Types_Point2d migrate_units migrate_coordinates


migrate_Postmark_PostmarkSendResponse : Evergreen.V82.Postmark.PostmarkSendResponse -> Evergreen.V83.Postmark.PostmarkSendResponse
migrate_Postmark_PostmarkSendResponse old =
    old


migrate_Quantity_Quantity : Quantity.Quantity number units -> Quantity.Quantity number units2
migrate_Quantity_Quantity old =
    Quantity.unwrap old |> Quantity.unsafe


migrate_Route_InviteToken : Evergreen.V82.Route.InviteToken -> Evergreen.V83.Route.InviteToken
migrate_Route_InviteToken old =
    case old of
        Evergreen.V82.Route.InviteToken p0 ->
            Evergreen.V83.Route.InviteToken p0


migrate_Route_LoginToken : Evergreen.V82.Route.LoginToken -> Evergreen.V83.Route.LoginToken
migrate_Route_LoginToken old =
    case old of
        Evergreen.V82.Route.LoginToken p0 ->
            Evergreen.V83.Route.LoginToken p0


migrate_Tile_RailPath : Evergreen.V82.Tile.RailPath -> Evergreen.V83.Tile.RailPath
migrate_Tile_RailPath old =
    case old of
        Evergreen.V82.Tile.RailPathHorizontal p0 ->
            Evergreen.V83.Tile.RailPathHorizontal p0

        Evergreen.V82.Tile.RailPathVertical p0 ->
            Evergreen.V83.Tile.RailPathVertical p0

        Evergreen.V82.Tile.RailPathBottomToRight ->
            Evergreen.V83.Tile.RailPathBottomToRight

        Evergreen.V82.Tile.RailPathBottomToLeft ->
            Evergreen.V83.Tile.RailPathBottomToLeft

        Evergreen.V82.Tile.RailPathTopToRight ->
            Evergreen.V83.Tile.RailPathTopToRight

        Evergreen.V82.Tile.RailPathTopToLeft ->
            Evergreen.V83.Tile.RailPathTopToLeft

        Evergreen.V82.Tile.RailPathBottomToRightLarge ->
            Evergreen.V83.Tile.RailPathBottomToRightLarge

        Evergreen.V82.Tile.RailPathBottomToLeftLarge ->
            Evergreen.V83.Tile.RailPathBottomToLeftLarge

        Evergreen.V82.Tile.RailPathTopToRightLarge ->
            Evergreen.V83.Tile.RailPathTopToRightLarge

        Evergreen.V82.Tile.RailPathTopToLeftLarge ->
            Evergreen.V83.Tile.RailPathTopToLeftLarge

        Evergreen.V82.Tile.RailPathStrafeDown ->
            Evergreen.V83.Tile.RailPathStrafeDown

        Evergreen.V82.Tile.RailPathStrafeUp ->
            Evergreen.V83.Tile.RailPathStrafeUp

        Evergreen.V82.Tile.RailPathStrafeLeft ->
            Evergreen.V83.Tile.RailPathStrafeLeft

        Evergreen.V82.Tile.RailPathStrafeRight ->
            Evergreen.V83.Tile.RailPathStrafeRight

        Evergreen.V82.Tile.RailPathStrafeDownSmall ->
            Evergreen.V83.Tile.RailPathStrafeDownSmall

        Evergreen.V82.Tile.RailPathStrafeUpSmall ->
            Evergreen.V83.Tile.RailPathStrafeUpSmall

        Evergreen.V82.Tile.RailPathStrafeLeftSmall ->
            Evergreen.V83.Tile.RailPathStrafeLeftSmall

        Evergreen.V82.Tile.RailPathStrafeRightSmall ->
            Evergreen.V83.Tile.RailPathStrafeRightSmall


migrate_Tile_Tile : Evergreen.V82.Tile.Tile -> Evergreen.V83.Tile.Tile
migrate_Tile_Tile old =
    case old of
        Evergreen.V82.Tile.EmptyTile ->
            Evergreen.V83.Tile.EmptyTile

        Evergreen.V82.Tile.HouseDown ->
            Evergreen.V83.Tile.HouseDown

        Evergreen.V82.Tile.HouseRight ->
            Evergreen.V83.Tile.HouseRight

        Evergreen.V82.Tile.HouseUp ->
            Evergreen.V83.Tile.HouseUp

        Evergreen.V82.Tile.HouseLeft ->
            Evergreen.V83.Tile.HouseLeft

        Evergreen.V82.Tile.RailHorizontal ->
            Evergreen.V83.Tile.RailHorizontal

        Evergreen.V82.Tile.RailVertical ->
            Evergreen.V83.Tile.RailVertical

        Evergreen.V82.Tile.RailBottomToRight ->
            Evergreen.V83.Tile.RailBottomToRight

        Evergreen.V82.Tile.RailBottomToLeft ->
            Evergreen.V83.Tile.RailBottomToLeft

        Evergreen.V82.Tile.RailTopToRight ->
            Evergreen.V83.Tile.RailTopToRight

        Evergreen.V82.Tile.RailTopToLeft ->
            Evergreen.V83.Tile.RailTopToLeft

        Evergreen.V82.Tile.RailBottomToRightLarge ->
            Evergreen.V83.Tile.RailBottomToRightLarge

        Evergreen.V82.Tile.RailBottomToLeftLarge ->
            Evergreen.V83.Tile.RailBottomToLeftLarge

        Evergreen.V82.Tile.RailTopToRightLarge ->
            Evergreen.V83.Tile.RailTopToRightLarge

        Evergreen.V82.Tile.RailTopToLeftLarge ->
            Evergreen.V83.Tile.RailTopToLeftLarge

        Evergreen.V82.Tile.RailCrossing ->
            Evergreen.V83.Tile.RailCrossing

        Evergreen.V82.Tile.RailStrafeDown ->
            Evergreen.V83.Tile.RailStrafeDown

        Evergreen.V82.Tile.RailStrafeUp ->
            Evergreen.V83.Tile.RailStrafeUp

        Evergreen.V82.Tile.RailStrafeLeft ->
            Evergreen.V83.Tile.RailStrafeLeft

        Evergreen.V82.Tile.RailStrafeRight ->
            Evergreen.V83.Tile.RailStrafeRight

        Evergreen.V82.Tile.TrainHouseRight ->
            Evergreen.V83.Tile.TrainHouseRight

        Evergreen.V82.Tile.TrainHouseLeft ->
            Evergreen.V83.Tile.TrainHouseLeft

        Evergreen.V82.Tile.RailStrafeDownSmall ->
            Evergreen.V83.Tile.RailStrafeDownSmall

        Evergreen.V82.Tile.RailStrafeUpSmall ->
            Evergreen.V83.Tile.RailStrafeUpSmall

        Evergreen.V82.Tile.RailStrafeLeftSmall ->
            Evergreen.V83.Tile.RailStrafeLeftSmall

        Evergreen.V82.Tile.RailStrafeRightSmall ->
            Evergreen.V83.Tile.RailStrafeRightSmall

        Evergreen.V82.Tile.Sidewalk ->
            Evergreen.V83.Tile.Sidewalk

        Evergreen.V82.Tile.SidewalkHorizontalRailCrossing ->
            Evergreen.V83.Tile.SidewalkHorizontalRailCrossing

        Evergreen.V82.Tile.SidewalkVerticalRailCrossing ->
            Evergreen.V83.Tile.SidewalkVerticalRailCrossing

        Evergreen.V82.Tile.RailBottomToRight_SplitLeft ->
            Evergreen.V83.Tile.RailBottomToRight_SplitLeft

        Evergreen.V82.Tile.RailBottomToLeft_SplitUp ->
            Evergreen.V83.Tile.RailBottomToLeft_SplitUp

        Evergreen.V82.Tile.RailTopToRight_SplitDown ->
            Evergreen.V83.Tile.RailTopToRight_SplitDown

        Evergreen.V82.Tile.RailTopToLeft_SplitRight ->
            Evergreen.V83.Tile.RailTopToLeft_SplitRight

        Evergreen.V82.Tile.RailBottomToRight_SplitUp ->
            Evergreen.V83.Tile.RailBottomToRight_SplitUp

        Evergreen.V82.Tile.RailBottomToLeft_SplitRight ->
            Evergreen.V83.Tile.RailBottomToLeft_SplitRight

        Evergreen.V82.Tile.RailTopToRight_SplitLeft ->
            Evergreen.V83.Tile.RailTopToRight_SplitLeft

        Evergreen.V82.Tile.RailTopToLeft_SplitDown ->
            Evergreen.V83.Tile.RailTopToLeft_SplitDown

        Evergreen.V82.Tile.PostOffice ->
            Evergreen.V83.Tile.PostOffice

        Evergreen.V82.Tile.MowedGrass1 ->
            Evergreen.V83.Tile.MowedGrass1

        Evergreen.V82.Tile.MowedGrass4 ->
            Evergreen.V83.Tile.MowedGrass4

        Evergreen.V82.Tile.PineTree1 ->
            Evergreen.V83.Tile.PineTree1

        Evergreen.V82.Tile.PineTree2 ->
            Evergreen.V83.Tile.PineTree2

        Evergreen.V82.Tile.BigPineTree ->
            Evergreen.V83.Tile.BigPineTree

        Evergreen.V82.Tile.LogCabinDown ->
            Evergreen.V83.Tile.LogCabinDown

        Evergreen.V82.Tile.LogCabinRight ->
            Evergreen.V83.Tile.LogCabinRight

        Evergreen.V82.Tile.LogCabinUp ->
            Evergreen.V83.Tile.LogCabinUp

        Evergreen.V82.Tile.LogCabinLeft ->
            Evergreen.V83.Tile.LogCabinLeft

        Evergreen.V82.Tile.RoadHorizontal ->
            Evergreen.V83.Tile.RoadHorizontal

        Evergreen.V82.Tile.RoadVertical ->
            Evergreen.V83.Tile.RoadVertical

        Evergreen.V82.Tile.RoadBottomToLeft ->
            Evergreen.V83.Tile.RoadBottomToLeft

        Evergreen.V82.Tile.RoadTopToLeft ->
            Evergreen.V83.Tile.RoadTopToLeft

        Evergreen.V82.Tile.RoadTopToRight ->
            Evergreen.V83.Tile.RoadTopToRight

        Evergreen.V82.Tile.RoadBottomToRight ->
            Evergreen.V83.Tile.RoadBottomToRight

        Evergreen.V82.Tile.Road4Way ->
            Evergreen.V83.Tile.Road4Way

        Evergreen.V82.Tile.RoadSidewalkCrossingHorizontal ->
            Evergreen.V83.Tile.RoadSidewalkCrossingHorizontal

        Evergreen.V82.Tile.RoadSidewalkCrossingVertical ->
            Evergreen.V83.Tile.RoadSidewalkCrossingVertical

        Evergreen.V82.Tile.Road3WayDown ->
            Evergreen.V83.Tile.Road3WayDown

        Evergreen.V82.Tile.Road3WayLeft ->
            Evergreen.V83.Tile.Road3WayLeft

        Evergreen.V82.Tile.Road3WayUp ->
            Evergreen.V83.Tile.Road3WayUp

        Evergreen.V82.Tile.Road3WayRight ->
            Evergreen.V83.Tile.Road3WayRight

        Evergreen.V82.Tile.RoadRailCrossingHorizontal ->
            Evergreen.V83.Tile.RoadRailCrossingHorizontal

        Evergreen.V82.Tile.RoadRailCrossingVertical ->
            Evergreen.V83.Tile.RoadRailCrossingVertical

        Evergreen.V82.Tile.FenceHorizontal ->
            Evergreen.V83.Tile.FenceHorizontal

        Evergreen.V82.Tile.FenceVertical ->
            Evergreen.V83.Tile.FenceVertical

        Evergreen.V82.Tile.FenceDiagonal ->
            Evergreen.V83.Tile.FenceDiagonal

        Evergreen.V82.Tile.FenceAntidiagonal ->
            Evergreen.V83.Tile.FenceAntidiagonal

        Evergreen.V82.Tile.RoadDeadendUp ->
            Evergreen.V83.Tile.RoadDeadendUp

        Evergreen.V82.Tile.RoadDeadendDown ->
            Evergreen.V83.Tile.RoadDeadendDown

        Evergreen.V82.Tile.BusStopDown ->
            Evergreen.V83.Tile.BusStopDown

        Evergreen.V82.Tile.BusStopLeft ->
            Evergreen.V83.Tile.BusStopLeft

        Evergreen.V82.Tile.BusStopRight ->
            Evergreen.V83.Tile.BusStopRight

        Evergreen.V82.Tile.BusStopUp ->
            Evergreen.V83.Tile.BusStopUp

        Evergreen.V82.Tile.Hospital ->
            Evergreen.V83.Tile.Hospital

        Evergreen.V82.Tile.Statue ->
            Evergreen.V83.Tile.Statue

        Evergreen.V82.Tile.HedgeRowDown ->
            Evergreen.V83.Tile.HedgeRowDown

        Evergreen.V82.Tile.HedgeRowLeft ->
            Evergreen.V83.Tile.HedgeRowLeft

        Evergreen.V82.Tile.HedgeRowRight ->
            Evergreen.V83.Tile.HedgeRowRight

        Evergreen.V82.Tile.HedgeRowUp ->
            Evergreen.V83.Tile.HedgeRowUp

        Evergreen.V82.Tile.HedgeCornerDownLeft ->
            Evergreen.V83.Tile.HedgeCornerDownLeft

        Evergreen.V82.Tile.HedgeCornerDownRight ->
            Evergreen.V83.Tile.HedgeCornerDownRight

        Evergreen.V82.Tile.HedgeCornerUpLeft ->
            Evergreen.V83.Tile.HedgeCornerUpLeft

        Evergreen.V82.Tile.HedgeCornerUpRight ->
            Evergreen.V83.Tile.HedgeCornerUpRight

        Evergreen.V82.Tile.HedgePillarDownLeft ->
            Evergreen.V83.Tile.HedgePillarDownLeft

        Evergreen.V82.Tile.HedgePillarDownRight ->
            Evergreen.V83.Tile.HedgePillarDownRight

        Evergreen.V82.Tile.HedgePillarUpLeft ->
            Evergreen.V83.Tile.HedgePillarUpLeft

        Evergreen.V82.Tile.HedgePillarUpRight ->
            Evergreen.V83.Tile.HedgePillarUpRight

        Evergreen.V82.Tile.ApartmentDown ->
            Evergreen.V83.Tile.ApartmentDown

        Evergreen.V82.Tile.ApartmentLeft ->
            Evergreen.V83.Tile.ApartmentLeft

        Evergreen.V82.Tile.ApartmentRight ->
            Evergreen.V83.Tile.ApartmentRight

        Evergreen.V82.Tile.ApartmentUp ->
            Evergreen.V83.Tile.ApartmentUp

        Evergreen.V82.Tile.RockDown ->
            Evergreen.V83.Tile.RockDown

        Evergreen.V82.Tile.RockLeft ->
            Evergreen.V83.Tile.RockLeft

        Evergreen.V82.Tile.RockRight ->
            Evergreen.V83.Tile.RockRight

        Evergreen.V82.Tile.RockUp ->
            Evergreen.V83.Tile.RockUp

        Evergreen.V82.Tile.Flowers1 ->
            Evergreen.V83.Tile.Flowers1

        Evergreen.V82.Tile.Flowers2 ->
            Evergreen.V83.Tile.Flowers2

        Evergreen.V82.Tile.ElmTree ->
            Evergreen.V83.Tile.ElmTree

        Evergreen.V82.Tile.DirtPathHorizontal ->
            Evergreen.V83.Tile.DirtPathHorizontal

        Evergreen.V82.Tile.DirtPathVertical ->
            Evergreen.V83.Tile.DirtPathVertical

        Evergreen.V82.Tile.BigText p0 ->
            Evergreen.V83.Tile.BigText p0

        Evergreen.V82.Tile.Hyperlink ->
            Evergreen.V83.Tile.Hyperlink

        Evergreen.V82.Tile.BenchDown ->
            Evergreen.V83.Tile.BenchDown

        Evergreen.V82.Tile.BenchLeft ->
            Evergreen.V83.Tile.BenchLeft

        Evergreen.V82.Tile.BenchUp ->
            Evergreen.V83.Tile.BenchUp

        Evergreen.V82.Tile.BenchRight ->
            Evergreen.V83.Tile.BenchRight

        Evergreen.V82.Tile.ParkingDown ->
            Evergreen.V83.Tile.ParkingDown

        Evergreen.V82.Tile.ParkingLeft ->
            Evergreen.V83.Tile.ParkingLeft

        Evergreen.V82.Tile.ParkingUp ->
            Evergreen.V83.Tile.ParkingUp

        Evergreen.V82.Tile.ParkingRight ->
            Evergreen.V83.Tile.ParkingRight

        Evergreen.V82.Tile.ParkingRoad ->
            Evergreen.V83.Tile.ParkingRoad

        Evergreen.V82.Tile.ParkingRoundabout ->
            Evergreen.V83.Tile.ParkingRoundabout

        Evergreen.V82.Tile.CornerHouseUpLeft ->
            Evergreen.V83.Tile.CornerHouseUpLeft

        Evergreen.V82.Tile.CornerHouseUpRight ->
            Evergreen.V83.Tile.CornerHouseUpRight

        Evergreen.V82.Tile.CornerHouseDownLeft ->
            Evergreen.V83.Tile.CornerHouseDownLeft

        Evergreen.V82.Tile.CornerHouseDownRight ->
            Evergreen.V83.Tile.CornerHouseDownRight


migrate_Tile_TileGroup : Evergreen.V82.Tile.TileGroup -> Evergreen.V83.Tile.TileGroup
migrate_Tile_TileGroup old =
    case old of
        Evergreen.V82.Tile.EmptyTileGroup ->
            Evergreen.V83.Tile.EmptyTileGroup

        Evergreen.V82.Tile.HouseGroup ->
            Evergreen.V83.Tile.HouseGroup

        Evergreen.V82.Tile.RailStraightGroup ->
            Evergreen.V83.Tile.RailStraightGroup

        Evergreen.V82.Tile.RailTurnGroup ->
            Evergreen.V83.Tile.RailTurnGroup

        Evergreen.V82.Tile.RailTurnLargeGroup ->
            Evergreen.V83.Tile.RailTurnLargeGroup

        Evergreen.V82.Tile.RailStrafeGroup ->
            Evergreen.V83.Tile.RailStrafeGroup

        Evergreen.V82.Tile.RailStrafeSmallGroup ->
            Evergreen.V83.Tile.RailStrafeSmallGroup

        Evergreen.V82.Tile.RailCrossingGroup ->
            Evergreen.V83.Tile.RailCrossingGroup

        Evergreen.V82.Tile.TrainHouseGroup ->
            Evergreen.V83.Tile.TrainHouseGroup

        Evergreen.V82.Tile.SidewalkGroup ->
            Evergreen.V83.Tile.SidewalkGroup

        Evergreen.V82.Tile.SidewalkRailGroup ->
            Evergreen.V83.Tile.SidewalkRailGroup

        Evergreen.V82.Tile.RailTurnSplitGroup ->
            Evergreen.V83.Tile.RailTurnSplitGroup

        Evergreen.V82.Tile.RailTurnSplitMirrorGroup ->
            Evergreen.V83.Tile.RailTurnSplitMirrorGroup

        Evergreen.V82.Tile.PostOfficeGroup ->
            Evergreen.V83.Tile.PostOfficeGroup

        Evergreen.V82.Tile.PineTreeGroup ->
            Evergreen.V83.Tile.PineTreeGroup

        Evergreen.V82.Tile.BigPineTreeGroup ->
            Evergreen.V83.Tile.BigPineTreeGroup

        Evergreen.V82.Tile.LogCabinGroup ->
            Evergreen.V83.Tile.LogCabinGroup

        Evergreen.V82.Tile.RoadStraightGroup ->
            Evergreen.V83.Tile.RoadStraightGroup

        Evergreen.V82.Tile.RoadTurnGroup ->
            Evergreen.V83.Tile.RoadTurnGroup

        Evergreen.V82.Tile.Road4WayGroup ->
            Evergreen.V83.Tile.Road4WayGroup

        Evergreen.V82.Tile.RoadSidewalkCrossingGroup ->
            Evergreen.V83.Tile.RoadSidewalkCrossingGroup

        Evergreen.V82.Tile.Road3WayGroup ->
            Evergreen.V83.Tile.Road3WayGroup

        Evergreen.V82.Tile.RoadRailCrossingGroup ->
            Evergreen.V83.Tile.RoadRailCrossingGroup

        Evergreen.V82.Tile.RoadDeadendGroup ->
            Evergreen.V83.Tile.RoadDeadendGroup

        Evergreen.V82.Tile.FenceStraightGroup ->
            Evergreen.V83.Tile.FenceStraightGroup

        Evergreen.V82.Tile.BusStopGroup ->
            Evergreen.V83.Tile.BusStopGroup

        Evergreen.V82.Tile.HospitalGroup ->
            Evergreen.V83.Tile.HospitalGroup

        Evergreen.V82.Tile.StatueGroup ->
            Evergreen.V83.Tile.StatueGroup

        Evergreen.V82.Tile.HedgeRowGroup ->
            Evergreen.V83.Tile.HedgeRowGroup

        Evergreen.V82.Tile.HedgeCornerGroup ->
            Evergreen.V83.Tile.HedgeCornerGroup

        Evergreen.V82.Tile.HedgePillarGroup ->
            Evergreen.V83.Tile.HedgePillarGroup

        Evergreen.V82.Tile.ApartmentGroup ->
            Evergreen.V83.Tile.ApartmentGroup

        Evergreen.V82.Tile.RockGroup ->
            Evergreen.V83.Tile.RockGroup

        Evergreen.V82.Tile.FlowersGroup ->
            Evergreen.V83.Tile.FlowersGroup

        Evergreen.V82.Tile.ElmTreeGroup ->
            Evergreen.V83.Tile.ElmTreeGroup

        Evergreen.V82.Tile.DirtPathGroup ->
            Evergreen.V83.Tile.DirtPathGroup

        Evergreen.V82.Tile.BigTextGroup ->
            Evergreen.V83.Tile.BigTextGroup

        Evergreen.V82.Tile.HyperlinkGroup ->
            Evergreen.V83.Tile.HyperlinkGroup

        Evergreen.V82.Tile.BenchGroup ->
            Evergreen.V83.Tile.BenchGroup

        Evergreen.V82.Tile.ParkingLotGroup ->
            Evergreen.V83.Tile.ParkingLotGroup

        Evergreen.V82.Tile.ParkingRoadGroup ->
            Evergreen.V83.Tile.ParkingRoadGroup

        Evergreen.V82.Tile.ParkingRoundaboutGroup ->
            Evergreen.V83.Tile.ParkingRoundaboutGroup

        Evergreen.V82.Tile.CornerHouseGroup ->
            Evergreen.V83.Tile.CornerHouseGroup


migrate_Train_IsStuckOrDerailed : Evergreen.V82.Train.IsStuckOrDerailed -> Evergreen.V83.Train.IsStuckOrDerailed
migrate_Train_IsStuckOrDerailed old =
    case old of
        Evergreen.V82.Train.IsStuck p0 ->
            Evergreen.V83.Train.IsStuck p0

        Evergreen.V82.Train.IsDerailed p0 p1 ->
            Evergreen.V83.Train.IsDerailed p0 (p1 |> migrate_Id_Id migrate_Id_TrainId)

        Evergreen.V82.Train.IsNotStuckOrDerailed ->
            Evergreen.V83.Train.IsNotStuckOrDerailed


migrate_Train_PreviousPath : Evergreen.V82.Train.PreviousPath -> Evergreen.V83.Train.PreviousPath
migrate_Train_PreviousPath old =
    { position = old.position |> migrate_Coord_Coord migrate_Units_WorldUnit
    , path = old.path |> migrate_Tile_RailPath
    , reversed = old.reversed
    }


migrate_Train_Status : Evergreen.V82.Train.Status -> Evergreen.V83.Train.Status
migrate_Train_Status old =
    case old of
        Evergreen.V82.Train.WaitingAtHome ->
            Evergreen.V83.Train.WaitingAtHome

        Evergreen.V82.Train.TeleportingHome p0 ->
            Evergreen.V83.Train.TeleportingHome p0

        Evergreen.V82.Train.Travelling ->
            Evergreen.V83.Train.Travelling

        Evergreen.V82.Train.StoppedAtPostOffice p0 ->
            Evergreen.V83.Train.StoppedAtPostOffice
                { time = p0.time
                , userId = p0.userId |> migrate_Id_Id migrate_Id_UserId
                }


migrate_Train_Train : Evergreen.V82.Train.Train -> Evergreen.V83.Train.Train
migrate_Train_Train old =
    case old of
        Evergreen.V82.Train.Train p0 ->
            Evergreen.V83.Train.Train
                { position = p0.position |> migrate_Coord_Coord migrate_Units_WorldUnit
                , path = p0.path |> migrate_Tile_RailPath
                , previousPaths = p0.previousPaths |> List.map migrate_Train_PreviousPath
                , t = p0.t
                , speed = p0.speed |> migrate_Quantity_Quantity
                , home = p0.home |> migrate_Coord_Coord migrate_Units_WorldUnit
                , homePath = p0.homePath |> migrate_Tile_RailPath
                , isStuckOrDerailed = p0.isStuckOrDerailed |> migrate_Train_IsStuckOrDerailed
                , status = p0.status |> migrate_Train_Status
                , owner = p0.owner |> migrate_Id_Id migrate_Id_UserId
                , color = p0.color |> migrate_Color_Color
                }


migrate_Types_BackendError : Evergreen.V82.Types.BackendError -> Evergreen.V83.Types.BackendError
migrate_Types_BackendError old =
    case old of
        Evergreen.V82.Types.PostmarkError p0 p1 ->
            Evergreen.V83.Types.PostmarkError (p0 |> migrate_EmailAddress_EmailAddress) p1

        Evergreen.V82.Types.UserNotFoundWhenLoggingIn p0 ->
            Evergreen.V83.Types.UserNotFoundWhenLoggingIn (p0 |> migrate_Id_Id migrate_Id_UserId)


migrate_Types_BackendUserData : Evergreen.V82.Types.BackendUserData -> Evergreen.V83.Types.BackendUserData
migrate_Types_BackendUserData old =
    { undoHistory = old.undoHistory
    , redoHistory = old.redoHistory
    , undoCurrent = old.undoCurrent
    , mailDrafts = old.mailDrafts |> migrate_IdDict_IdDict migrate_Id_UserId (List.map migrate_MailEditor_Content)
    , cursor = old.cursor |> Maybe.map migrate_Cursor_Cursor
    , handColor = old.handColor |> migrate_Color_Colors
    , emailAddress = old.emailAddress |> migrate_EmailAddress_EmailAddress
    , acceptedInvites = old.acceptedInvites |> migrate_IdDict_IdDict migrate_Id_UserId identity
    , name = old.name |> migrate_DisplayName_DisplayName
    , allowEmailNotifications = old.allowEmailNotifications
    }


migrate_Types_EmailResult : Evergreen.V82.Types.EmailResult -> Evergreen.V83.Types.EmailResult
migrate_Types_EmailResult old =
    case old of
        Evergreen.V82.Types.EmailSending ->
            Evergreen.V83.Types.EmailSending

        Evergreen.V82.Types.EmailSendFailed p0 ->
            Evergreen.V83.Types.EmailSendFailed p0

        Evergreen.V82.Types.EmailSent p0 ->
            Evergreen.V83.Types.EmailSent (p0 |> migrate_Postmark_PostmarkSendResponse)


migrate_Types_Invite : Evergreen.V82.Types.Invite -> Evergreen.V83.Types.Invite
migrate_Types_Invite old =
    { invitedBy = old.invitedBy |> migrate_Id_Id migrate_Id_UserId
    , invitedAt = old.invitedAt
    , invitedEmailAddress = old.invitedEmailAddress |> migrate_EmailAddress_EmailAddress
    , emailResult = old.emailResult |> migrate_Types_EmailResult
    }


migrate_Types_LoginRequestedBy : Evergreen.V82.Types.LoginRequestedBy -> Evergreen.V83.Types.LoginRequestedBy
migrate_Types_LoginRequestedBy old =
    case old of
        Evergreen.V82.Types.LoginRequestedByBackend ->
            Evergreen.V83.Types.LoginRequestedByBackend

        Evergreen.V82.Types.LoginRequestedByFrontend p0 ->
            Evergreen.V83.Types.LoginRequestedByFrontend p0


migrate_Units_CellLocalUnit : Evergreen.V82.Units.CellLocalUnit -> Evergreen.V83.Units.CellLocalUnit
migrate_Units_CellLocalUnit old =
    case old of
        Evergreen.V82.Units.LocalUnit p0 ->
            Evergreen.V83.Units.LocalUnit p0


migrate_Units_CellUnit : Evergreen.V82.Units.CellUnit -> Evergreen.V83.Units.CellUnit
migrate_Units_CellUnit old =
    case old of
        Evergreen.V82.Units.CellUnit p0 ->
            Evergreen.V83.Units.CellUnit p0


migrate_Units_WorldUnit : Evergreen.V82.Units.WorldUnit -> Evergreen.V83.Units.WorldUnit
migrate_Units_WorldUnit old =
    case old of
        Evergreen.V82.Units.WorldUnit p0 ->
            Evergreen.V83.Units.WorldUnit p0


migrate_User_InviteTree : Evergreen.V82.User.InviteTree -> Evergreen.V83.User.InviteTree
migrate_User_InviteTree old =
    case old of
        Evergreen.V82.User.InviteTree p0 ->
            Evergreen.V83.User.InviteTree
                { userId = p0.userId |> migrate_Id_Id migrate_Id_UserId
                , invited = p0.invited |> List.map migrate_User_InviteTree
                }
