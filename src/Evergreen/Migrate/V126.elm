module Evergreen.Migrate.V126 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import AssocList
import AssocSet
import Dict
import Effect.Time
import Evergreen.V125.Animal
import Evergreen.V125.Bounds
import Evergreen.V125.Change
import Evergreen.V125.Color
import Evergreen.V125.Coord
import Evergreen.V125.Cursor
import Evergreen.V125.DisplayName
import Evergreen.V125.EmailAddress
import Evergreen.V125.Geometry.Types
import Evergreen.V125.Grid
import Evergreen.V125.GridCell
import Evergreen.V125.Hyperlink
import Evergreen.V125.Id
import Evergreen.V125.IdDict
import Evergreen.V125.MailEditor
import Evergreen.V125.Point2d
import Evergreen.V125.Postmark
import Evergreen.V125.Tile
import Evergreen.V125.TileCountBot
import Evergreen.V125.TimeOfDay
import Evergreen.V125.Train
import Evergreen.V125.Types
import Evergreen.V125.User
import Evergreen.V126.Animal
import Evergreen.V126.Bounds
import Evergreen.V126.Change
import Evergreen.V126.Color
import Evergreen.V126.Coord
import Evergreen.V126.Cursor
import Evergreen.V126.DisplayName
import Evergreen.V126.EmailAddress
import Evergreen.V126.Geometry.Types
import Evergreen.V126.Grid
import Evergreen.V126.GridCell
import Evergreen.V126.Hyperlink
import Evergreen.V126.Id
import Evergreen.V126.IdDict
import Evergreen.V126.MailEditor
import Evergreen.V126.Name
import Evergreen.V126.Point2d
import Evergreen.V126.Postmark
import Evergreen.V126.Tile
import Evergreen.V126.TileCountBot
import Evergreen.V126.TimeOfDay
import Evergreen.V126.Train
import Evergreen.V126.Types
import Evergreen.V126.User
import Lamdera.Migrations exposing (..)
import List
import List.Nonempty exposing (Nonempty(..))
import Maybe
import Quantity
import Random
import String.Nonempty exposing (NonemptyString(..))


frontendModel : Evergreen.V125.Types.FrontendModel -> ModelMigration Evergreen.V126.Types.FrontendModel Evergreen.V126.Types.FrontendMsg
frontendModel _ =
    ModelUnchanged


backendModel : Evergreen.V125.Types.BackendModel -> ModelMigration Evergreen.V126.Types.BackendModel Evergreen.V126.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V125.Types.FrontendMsg -> MsgMigration Evergreen.V126.Types.FrontendMsg Evergreen.V126.Types.FrontendMsg
frontendMsg _ =
    MsgOldValueIgnored


toBackend : Evergreen.V125.Types.ToBackend -> MsgMigration Evergreen.V126.Types.ToBackend Evergreen.V126.Types.BackendMsg
toBackend _ =
    MsgOldValueIgnored


backendMsg : Evergreen.V125.Types.BackendMsg -> MsgMigration Evergreen.V126.Types.BackendMsg Evergreen.V126.Types.BackendMsg
backendMsg _ =
    MsgOldValueIgnored


toFrontend : Evergreen.V125.Types.ToFrontend -> MsgMigration Evergreen.V126.Types.ToFrontend Evergreen.V126.Types.FrontendMsg
toFrontend _ =
    MsgOldValueIgnored


migrate_Types_BackendModel : Evergreen.V125.Types.BackendModel -> Evergreen.V126.Types.BackendModel
migrate_Types_BackendModel old =
    { grid = old.grid |> migrate_Grid_Grid migrate_GridCell_BackendHistory
    , userSessions =
        old.userSessions
            |> Dict.map
                (\k ->
                    \rec ->
                        { clientIds = rec.clientIds |> migrate_AssocList_Dict identity (List.map migrate_Bounds_Bounds)
                        , userId = rec.userId |> Maybe.map migrate_Id_Id
                        }
                )
    , users = old.users |> migrate_IdDict_IdDict migrate_Types_BackendUserData
    , secretLinkCounter = old.secretLinkCounter
    , errors = old.errors |> List.map (Tuple.mapSecond migrate_Types_BackendError)
    , trains = old.trains |> migrate_IdDict_IdDict migrate_Train_Train
    , animals = old.animals |> migrate_IdDict_IdDict migrate_Animal_Animal
    , npcs = Evergreen.V126.IdDict.RBEmpty_elm_builtin
    , lastWorldUpdateTrains = old.lastWorldUpdateTrains |> migrate_IdDict_IdDict migrate_Train_Train
    , lastWorldUpdate = old.lastWorldUpdate
    , mail = old.mail |> migrate_IdDict_IdDict migrate_MailEditor_BackendMail
    , pendingLoginTokens =
        old.pendingLoginTokens
            |> migrate_AssocList_Dict migrate_Id_SecretId
                (\rec ->
                    { requestTime = rec.requestTime
                    , userId = rec.userId |> migrate_Id_Id
                    }
                )
    , pendingOneTimePasswords =
        old.pendingOneTimePasswords
            |> migrate_AssocList_Dict identity
                (\rec ->
                    { requestTime = rec.requestTime
                    , userId = rec.userId |> migrate_Id_Id
                    , loginAttempts = rec.loginAttempts
                    , oneTimePassword = rec.oneTimePassword |> migrate_Id_SecretId
                    }
                )
    , invites = old.invites |> migrate_AssocList_Dict migrate_Id_SecretId migrate_Types_Invite
    , lastCacheRegeneration = old.lastCacheRegeneration
    , reported = old.reported |> migrate_IdDict_IdDict (migrate_List_Nonempty_Nonempty migrate_Change_BackendReport)
    , isGridReadOnly = old.isGridReadOnly
    , trainsAndAnimalsDisabled = old.trainsAndAnimalsDisabled |> migrate_Change_AreTrainsAndAnimalsDisabled
    , lastReportEmailToAdmin = old.lastReportEmailToAdmin
    , worldUpdateDurations = old.worldUpdateDurations
    , tileCountBot = old.tileCountBot |> Maybe.map migrate_TileCountBot_Model
    }


migrate_Animal_Animal : Evergreen.V125.Animal.Animal -> Evergreen.V126.Animal.Animal
migrate_Animal_Animal old =
    { position = old.position |> migrate_Point2d_Point2d
    , startTime = old.startTime
    , endPosition = old.endPosition |> migrate_Point2d_Point2d
    , animalType = old.animalType |> migrate_Animal_AnimalType
    , name =
        Random.step
            (randomName old.animalType)
            (Random.initialSeed
                (Effect.Time.posixToMillis old.startTime
                    + (\(Evergreen.V125.Geometry.Types.Point2d a) -> round a.x) old.position
                )
            )
            |> Tuple.first
    }


randomName : Evergreen.V125.Animal.AnimalType -> Random.Generator Evergreen.V126.Name.Name
randomName animalType =
    case animalType of
        Evergreen.V125.Animal.Cow ->
            List.Nonempty.sample cowNames

        Evergreen.V125.Animal.Hamster ->
            List.Nonempty.sample hamsterNames

        Evergreen.V125.Animal.Sheep ->
            List.Nonempty.sample sheepNames


cowNames : Nonempty Evergreen.V126.Name.Name
cowNames =
    [ "Mooferston"
    , "Cow"
    , "Bill the Cow"
    , "Bessy"
    , "Ma Cowbell"
    , "Cow-ard"
    ]
        |> toNonempty


hamsterNames : Nonempty Evergreen.V126.Name.Name
hamsterNames =
    [ "Hamshee"
    , "Squishy Squeak"
    , "Hamster Prime"
    , "Beanbag"
    ]
        |> toNonempty


sheepNames : Nonempty Evergreen.V126.Name.Name
sheepNames =
    [ "Baaa"
    , "Sheepy Sheep"
    , "McFluffy"
    , "Sheeply"
    , "Sheepskate"
    , "Count Sheepington"
    , "McScruffenstein"
    , "McFlufferston"
    , "Sheela the Sheep"
    , "Sheepard"
    , "Baaby"
    ]
        |> toNonempty


toNonempty : List String -> Nonempty Evergreen.V126.Name.Name
toNonempty list =
    List.filterMap (\text -> String.Nonempty.fromString text |> Maybe.map Evergreen.V126.Name.Name) list
        |> List.Nonempty.fromList
        |> Maybe.withDefault (Nonempty (Evergreen.V126.Name.Name (NonemptyString 'S' "ven")) [])


migrate_Animal_AnimalType : Evergreen.V125.Animal.AnimalType -> Evergreen.V126.Animal.AnimalType
migrate_Animal_AnimalType old =
    case old of
        Evergreen.V125.Animal.Cow ->
            Evergreen.V126.Animal.Cow

        Evergreen.V125.Animal.Hamster ->
            Evergreen.V126.Animal.Hamster

        Evergreen.V125.Animal.Sheep ->
            Evergreen.V126.Animal.Sheep


migrate_AssocList_Dict : (a_old -> a_new) -> (b_old -> b_new) -> AssocList.Dict a_old b_old -> AssocList.Dict a_new b_new
migrate_AssocList_Dict migrate_a migrate_b old =
    old
        |> AssocList.toList
        |> List.map (Tuple.mapBoth migrate_a migrate_b)
        |> AssocList.fromList


migrate_AssocSet_Set : (a_old -> a_new) -> AssocSet.Set a_old -> AssocSet.Set a_new
migrate_AssocSet_Set migrate_a old =
    old |> AssocSet.map migrate_a


migrate_Bounds_Bounds : Evergreen.V125.Bounds.Bounds unit_old -> Evergreen.V126.Bounds.Bounds unit_new
migrate_Bounds_Bounds old =
    case old of
        Evergreen.V125.Bounds.Bounds p0 ->
            Evergreen.V126.Bounds.Bounds
                { min = p0.min |> migrate_Coord_Coord
                , max = p0.max |> migrate_Coord_Coord
                }


migrate_Change_AreTrainsAndAnimalsDisabled : Evergreen.V125.Change.AreTrainsAndAnimalsDisabled -> Evergreen.V126.Change.AreTrainsAndAnimalsDisabled
migrate_Change_AreTrainsAndAnimalsDisabled old =
    case old of
        Evergreen.V125.Change.TrainsAndAnimalsDisabled ->
            Evergreen.V126.Change.TrainsAndAnimalsDisabled

        Evergreen.V125.Change.TrainsAndAnimalsEnabled ->
            Evergreen.V126.Change.TrainsAndAnimalsEnabled


migrate_Change_BackendReport : Evergreen.V125.Change.BackendReport -> Evergreen.V126.Change.BackendReport
migrate_Change_BackendReport old =
    { reportedUser = old.reportedUser |> migrate_Id_Id
    , position = old.position |> migrate_Coord_Coord
    , reportedAt = old.reportedAt
    }


migrate_Change_TileHotkey : Evergreen.V125.Change.TileHotkey -> Evergreen.V126.Change.TileHotkey
migrate_Change_TileHotkey old =
    case old of
        Evergreen.V125.Change.Hotkey0 ->
            Evergreen.V126.Change.Hotkey0

        Evergreen.V125.Change.Hotkey1 ->
            Evergreen.V126.Change.Hotkey1

        Evergreen.V125.Change.Hotkey2 ->
            Evergreen.V126.Change.Hotkey2

        Evergreen.V125.Change.Hotkey3 ->
            Evergreen.V126.Change.Hotkey3

        Evergreen.V125.Change.Hotkey4 ->
            Evergreen.V126.Change.Hotkey4

        Evergreen.V125.Change.Hotkey5 ->
            Evergreen.V126.Change.Hotkey5

        Evergreen.V125.Change.Hotkey6 ->
            Evergreen.V126.Change.Hotkey6

        Evergreen.V125.Change.Hotkey7 ->
            Evergreen.V126.Change.Hotkey7

        Evergreen.V125.Change.Hotkey8 ->
            Evergreen.V126.Change.Hotkey8

        Evergreen.V125.Change.Hotkey9 ->
            Evergreen.V126.Change.Hotkey9


migrate_Color_Color : Evergreen.V125.Color.Color -> Evergreen.V126.Color.Color
migrate_Color_Color old =
    case old of
        Evergreen.V125.Color.Color p0 ->
            Evergreen.V126.Color.Color p0


migrate_Color_Colors : Evergreen.V125.Color.Colors -> Evergreen.V126.Color.Colors
migrate_Color_Colors old =
    { primaryColor = old.primaryColor |> migrate_Color_Color
    , secondaryColor = old.secondaryColor |> migrate_Color_Color
    }


migrate_Coord_Coord : Evergreen.V125.Coord.Coord units_old -> Evergreen.V126.Coord.Coord units_new
migrate_Coord_Coord old =
    old |> Tuple.mapBoth migrate_Quantity_Quantity migrate_Quantity_Quantity


migrate_Cursor_Cursor : Evergreen.V125.Cursor.Cursor -> Evergreen.V126.Cursor.Cursor
migrate_Cursor_Cursor old =
    { position = old.position |> migrate_Point2d_Point2d
    , holding = Evergreen.V126.Cursor.NotHolding
    , currentTool = old.currentTool |> migrate_Cursor_OtherUsersTool
    }


migrate_Cursor_OtherUsersTool : Evergreen.V125.Cursor.OtherUsersTool -> Evergreen.V126.Cursor.OtherUsersTool
migrate_Cursor_OtherUsersTool old =
    case old of
        Evergreen.V125.Cursor.HandTool ->
            Evergreen.V126.Cursor.HandTool

        Evergreen.V125.Cursor.TilePlacerTool ->
            Evergreen.V126.Cursor.TilePlacerTool

        Evergreen.V125.Cursor.TilePickerTool ->
            Evergreen.V126.Cursor.TilePickerTool

        Evergreen.V125.Cursor.EraserTool ->
            Evergreen.V126.Cursor.EraserTool

        Evergreen.V125.Cursor.TextTool p0 ->
            Evergreen.V126.Cursor.TextTool
                (p0
                    |> Maybe.map
                        (\rec1 ->
                            { cursorPosition = rec1.cursorPosition |> migrate_Coord_Coord
                            }
                        )
                )

        Evergreen.V125.Cursor.ReportTool ->
            Evergreen.V126.Cursor.ReportTool


migrate_DisplayName_DisplayName : Evergreen.V125.DisplayName.DisplayName -> Evergreen.V126.DisplayName.DisplayName
migrate_DisplayName_DisplayName old =
    case old of
        Evergreen.V125.DisplayName.DisplayName p0 ->
            Evergreen.V126.DisplayName.DisplayName p0


migrate_EmailAddress_EmailAddress : Evergreen.V125.EmailAddress.EmailAddress -> Evergreen.V126.EmailAddress.EmailAddress
migrate_EmailAddress_EmailAddress old =
    case old of
        Evergreen.V125.EmailAddress.EmailAddress p0 ->
            Evergreen.V126.EmailAddress.EmailAddress p0


migrate_Geometry_Types_Point2d : Evergreen.V125.Geometry.Types.Point2d units_old coordinates_old -> Evergreen.V126.Geometry.Types.Point2d units_new coordinates_new
migrate_Geometry_Types_Point2d old =
    case old of
        Evergreen.V125.Geometry.Types.Point2d p0 ->
            Evergreen.V126.Geometry.Types.Point2d p0


migrate_GridCell_BackendHistory : Evergreen.V125.GridCell.BackendHistory -> Evergreen.V126.GridCell.BackendHistory
migrate_GridCell_BackendHistory old =
    case old of
        Evergreen.V125.GridCell.BackendDecoded p0 ->
            Evergreen.V126.GridCell.BackendDecoded (p0 |> List.map migrate_GridCell_Value)

        Evergreen.V125.GridCell.BackendEncodedAndDecoded p0 p1 ->
            Evergreen.V126.GridCell.BackendEncodedAndDecoded p0 (p1 |> List.map migrate_GridCell_Value)


migrate_GridCell_Cache : Evergreen.V125.GridCell.Cache -> Evergreen.V126.GridCell.Cache
migrate_GridCell_Cache old =
    old |> List.map migrate_GridCell_Value


migrate_GridCell_Cell : (a_old -> a_new) -> Evergreen.V125.GridCell.Cell a_old -> Evergreen.V126.GridCell.Cell a_new
migrate_GridCell_Cell migrate_a old =
    case old of
        Evergreen.V125.GridCell.Cell p0 ->
            Evergreen.V126.GridCell.Cell
                { history = p0.history |> migrate_a
                , undoPoint = p0.undoPoint |> migrate_IdDict_IdDict identity
                , cache = p0.cache |> migrate_GridCell_Cache
                , railSplitToggled = p0.railSplitToggled |> migrate_AssocSet_Set migrate_Coord_Coord
                , mapCache = p0.mapCache
                }


migrate_GridCell_Value : Evergreen.V125.GridCell.Value -> Evergreen.V126.GridCell.Value
migrate_GridCell_Value old =
    { userId = old.userId |> migrate_Id_Id
    , position = old.position |> migrate_Coord_Coord
    , tile = old.tile |> migrate_Tile_Tile
    , colors = old.colors |> migrate_Color_Colors
    , time = old.time
    }


migrate_Id_SecretId (Evergreen.V125.Id.SecretId old) =
    Evergreen.V126.Id.SecretId old


migrate_Grid_Grid : (a_old -> a_new) -> Evergreen.V125.Grid.Grid a_old -> Evergreen.V126.Grid.Grid a_new
migrate_Grid_Grid migrate_a old =
    case old of
        Evergreen.V125.Grid.Grid p0 ->
            Evergreen.V126.Grid.Grid (p0 |> Dict.map (\_ -> migrate_GridCell_Cell migrate_a))


migrate_Hyperlink_Hyperlink : Evergreen.V125.Hyperlink.Hyperlink -> Evergreen.V126.Hyperlink.Hyperlink
migrate_Hyperlink_Hyperlink old =
    case old of
        Evergreen.V125.Hyperlink.Hyperlink p0 ->
            Evergreen.V126.Hyperlink.Hyperlink p0


migrate_IdDict_IdDict : (v_old -> v_new) -> Evergreen.V125.IdDict.IdDict k_old v_old -> Evergreen.V126.IdDict.IdDict k_new v_new
migrate_IdDict_IdDict migrate_v old =
    case old of
        Evergreen.V125.IdDict.RBNode_elm_builtin p0 p1 p2 p3 p4 ->
            Evergreen.V126.IdDict.RBNode_elm_builtin (p0 |> migrate_IdDict_NColor)
                p1
                (p2 |> migrate_v)
                (p3 |> migrate_IdDict_IdDict migrate_v)
                (p4 |> migrate_IdDict_IdDict migrate_v)

        Evergreen.V125.IdDict.RBEmpty_elm_builtin ->
            Evergreen.V126.IdDict.RBEmpty_elm_builtin


migrate_IdDict_NColor : Evergreen.V125.IdDict.NColor -> Evergreen.V126.IdDict.NColor
migrate_IdDict_NColor old =
    case old of
        Evergreen.V125.IdDict.Red ->
            Evergreen.V126.IdDict.Red

        Evergreen.V125.IdDict.Black ->
            Evergreen.V126.IdDict.Black


migrate_Id_Id : Evergreen.V125.Id.Id a_old -> Evergreen.V126.Id.Id a_new
migrate_Id_Id old =
    case old of
        Evergreen.V125.Id.Id p0 ->
            Evergreen.V126.Id.Id p0


migrate_List_Nonempty_Nonempty : (a_old -> a_new) -> List.Nonempty.Nonempty a_old -> List.Nonempty.Nonempty a_new
migrate_List_Nonempty_Nonempty migrate_a old =
    old |> List.Nonempty.map migrate_a


migrate_MailEditor_BackendMail : Evergreen.V125.MailEditor.BackendMail -> Evergreen.V126.MailEditor.BackendMail
migrate_MailEditor_BackendMail old =
    { content = old.content |> List.map migrate_MailEditor_Content
    , status = old.status |> migrate_MailEditor_MailStatus
    , from = old.from |> migrate_Id_Id
    , to = old.to |> migrate_Id_Id
    }


migrate_MailEditor_Content : Evergreen.V125.MailEditor.Content -> Evergreen.V126.MailEditor.Content
migrate_MailEditor_Content old =
    case old of
        Evergreen.V125.MailEditor.ImageType p0 p1 ->
            Evergreen.V126.MailEditor.ImageType p0 (p1 |> migrate_MailEditor_Image)

        Evergreen.V125.MailEditor.TextType p0 p1 ->
            Evergreen.V126.MailEditor.TextType p0 p1


migrate_MailEditor_Image : Evergreen.V125.MailEditor.Image -> Evergreen.V126.MailEditor.Image
migrate_MailEditor_Image old =
    case old of
        Evergreen.V125.MailEditor.Stamp p0 ->
            Evergreen.V126.MailEditor.Stamp (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.SunglassesEmoji p0 ->
            Evergreen.V126.MailEditor.SunglassesEmoji (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.NormalEmoji p0 ->
            Evergreen.V126.MailEditor.NormalEmoji (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.SadEmoji p0 ->
            Evergreen.V126.MailEditor.SadEmoji (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.Man p0 ->
            Evergreen.V126.MailEditor.Man (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.TileImage p0 p1 p2 ->
            Evergreen.V126.MailEditor.TileImage (p0 |> migrate_Tile_TileGroup)
                p1
                (p2 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.Grass ->
            Evergreen.V126.MailEditor.Grass

        Evergreen.V125.MailEditor.DefaultCursor p0 ->
            Evergreen.V126.MailEditor.DefaultCursor (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.DragCursor p0 ->
            Evergreen.V126.MailEditor.DragCursor (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.PinchCursor p0 ->
            Evergreen.V126.MailEditor.PinchCursor (p0 |> migrate_Color_Colors)

        Evergreen.V125.MailEditor.Line p0 p1 ->
            Evergreen.V126.MailEditor.Line p0 (p1 |> migrate_Color_Color)

        Evergreen.V125.MailEditor.Animal p0 p1 ->
            Evergreen.V126.MailEditor.Animal (p0 |> migrate_Animal_AnimalType)
                (p1 |> migrate_Color_Colors)


migrate_MailEditor_MailStatus : Evergreen.V125.MailEditor.MailStatus -> Evergreen.V126.MailEditor.MailStatus
migrate_MailEditor_MailStatus old =
    case old of
        Evergreen.V125.MailEditor.MailWaitingPickup ->
            Evergreen.V126.MailEditor.MailWaitingPickup

        Evergreen.V125.MailEditor.MailInTransit p0 ->
            Evergreen.V126.MailEditor.MailInTransit (p0 |> migrate_Id_Id)

        Evergreen.V125.MailEditor.MailReceived p0 ->
            Evergreen.V126.MailEditor.MailReceived p0

        Evergreen.V125.MailEditor.MailReceivedAndViewed p0 ->
            Evergreen.V126.MailEditor.MailReceivedAndViewed p0

        Evergreen.V125.MailEditor.MailDeletedByAdmin p0 ->
            Evergreen.V126.MailEditor.MailDeletedByAdmin
                { previousStatus = p0.previousStatus |> migrate_MailEditor_MailStatus2
                , deletedAt = p0.deletedAt
                }


migrate_MailEditor_MailStatus2 : Evergreen.V125.MailEditor.MailStatus2 -> Evergreen.V126.MailEditor.MailStatus2
migrate_MailEditor_MailStatus2 old =
    case old of
        Evergreen.V125.MailEditor.MailWaitingPickup2 ->
            Evergreen.V126.MailEditor.MailWaitingPickup2

        Evergreen.V125.MailEditor.MailInTransit2 p0 ->
            Evergreen.V126.MailEditor.MailInTransit2 (p0 |> migrate_Id_Id)

        Evergreen.V125.MailEditor.MailReceived2 p0 ->
            Evergreen.V126.MailEditor.MailReceived2 p0

        Evergreen.V125.MailEditor.MailReceivedAndViewed2 p0 ->
            Evergreen.V126.MailEditor.MailReceivedAndViewed2 p0


migrate_Point2d_Point2d : Evergreen.V125.Point2d.Point2d units_old coordinates_old -> Evergreen.V126.Point2d.Point2d units_new coordinates_new
migrate_Point2d_Point2d old =
    old |> migrate_Geometry_Types_Point2d


migrate_Postmark_PostmarkSendResponse : Evergreen.V125.Postmark.PostmarkSendResponse -> Evergreen.V126.Postmark.PostmarkSendResponse
migrate_Postmark_PostmarkSendResponse old =
    old


migrate_Quantity_Quantity : Quantity.Quantity number units -> Quantity.Quantity number units2
migrate_Quantity_Quantity old =
    Quantity.unwrap old |> Quantity.unsafe


migrate_TileCountBot_Model : Evergreen.V125.TileCountBot.Model -> Evergreen.V126.TileCountBot.Model
migrate_TileCountBot_Model old =
    { userId = old.userId |> migrate_Id_Id
    , tileUsage = old.tileUsage |> migrate_AssocList_Dict migrate_Tile_TileGroup identity
    , changedCells = old.changedCells |> Dict.map (\_ -> List.map migrate_GridCell_Value)
    }


migrate_Tile_RailPath : Evergreen.V125.Tile.RailPath -> Evergreen.V126.Tile.RailPath
migrate_Tile_RailPath old =
    case old of
        Evergreen.V125.Tile.RailPathHorizontal p0 ->
            Evergreen.V126.Tile.RailPathHorizontal p0

        Evergreen.V125.Tile.RailPathVertical p0 ->
            Evergreen.V126.Tile.RailPathVertical p0

        Evergreen.V125.Tile.RailPathBottomToRight ->
            Evergreen.V126.Tile.RailPathBottomToRight

        Evergreen.V125.Tile.RailPathBottomToLeft ->
            Evergreen.V126.Tile.RailPathBottomToLeft

        Evergreen.V125.Tile.RailPathTopToRight ->
            Evergreen.V126.Tile.RailPathTopToRight

        Evergreen.V125.Tile.RailPathTopToLeft ->
            Evergreen.V126.Tile.RailPathTopToLeft

        Evergreen.V125.Tile.RailPathBottomToRightLarge ->
            Evergreen.V126.Tile.RailPathBottomToRightLarge

        Evergreen.V125.Tile.RailPathBottomToLeftLarge ->
            Evergreen.V126.Tile.RailPathBottomToLeftLarge

        Evergreen.V125.Tile.RailPathTopToRightLarge ->
            Evergreen.V126.Tile.RailPathTopToRightLarge

        Evergreen.V125.Tile.RailPathTopToLeftLarge ->
            Evergreen.V126.Tile.RailPathTopToLeftLarge

        Evergreen.V125.Tile.RailPathStrafeDown ->
            Evergreen.V126.Tile.RailPathStrafeDown

        Evergreen.V125.Tile.RailPathStrafeUp ->
            Evergreen.V126.Tile.RailPathStrafeUp

        Evergreen.V125.Tile.RailPathStrafeLeft ->
            Evergreen.V126.Tile.RailPathStrafeLeft

        Evergreen.V125.Tile.RailPathStrafeRight ->
            Evergreen.V126.Tile.RailPathStrafeRight

        Evergreen.V125.Tile.RailPathStrafeDownSmall ->
            Evergreen.V126.Tile.RailPathStrafeDownSmall

        Evergreen.V125.Tile.RailPathStrafeUpSmall ->
            Evergreen.V126.Tile.RailPathStrafeUpSmall

        Evergreen.V125.Tile.RailPathStrafeLeftSmall ->
            Evergreen.V126.Tile.RailPathStrafeLeftSmall

        Evergreen.V125.Tile.RailPathStrafeRightSmall ->
            Evergreen.V126.Tile.RailPathStrafeRightSmall


migrate_Tile_Tile : Evergreen.V125.Tile.Tile -> Evergreen.V126.Tile.Tile
migrate_Tile_Tile old =
    case old of
        Evergreen.V125.Tile.EmptyTile ->
            Evergreen.V126.Tile.EmptyTile

        Evergreen.V125.Tile.HouseDown ->
            Evergreen.V126.Tile.HouseDown

        Evergreen.V125.Tile.HouseRight ->
            Evergreen.V126.Tile.HouseRight

        Evergreen.V125.Tile.HouseUp ->
            Evergreen.V126.Tile.HouseUp

        Evergreen.V125.Tile.HouseLeft ->
            Evergreen.V126.Tile.HouseLeft

        Evergreen.V125.Tile.RailHorizontal ->
            Evergreen.V126.Tile.RailHorizontal

        Evergreen.V125.Tile.RailVertical ->
            Evergreen.V126.Tile.RailVertical

        Evergreen.V125.Tile.RailBottomToRight ->
            Evergreen.V126.Tile.RailBottomToRight

        Evergreen.V125.Tile.RailBottomToLeft ->
            Evergreen.V126.Tile.RailBottomToLeft

        Evergreen.V125.Tile.RailTopToRight ->
            Evergreen.V126.Tile.RailTopToRight

        Evergreen.V125.Tile.RailTopToLeft ->
            Evergreen.V126.Tile.RailTopToLeft

        Evergreen.V125.Tile.RailBottomToRightLarge ->
            Evergreen.V126.Tile.RailBottomToRightLarge

        Evergreen.V125.Tile.RailBottomToLeftLarge ->
            Evergreen.V126.Tile.RailBottomToLeftLarge

        Evergreen.V125.Tile.RailTopToRightLarge ->
            Evergreen.V126.Tile.RailTopToRightLarge

        Evergreen.V125.Tile.RailTopToLeftLarge ->
            Evergreen.V126.Tile.RailTopToLeftLarge

        Evergreen.V125.Tile.RailCrossing ->
            Evergreen.V126.Tile.RailCrossing

        Evergreen.V125.Tile.RailStrafeDown ->
            Evergreen.V126.Tile.RailStrafeDown

        Evergreen.V125.Tile.RailStrafeUp ->
            Evergreen.V126.Tile.RailStrafeUp

        Evergreen.V125.Tile.RailStrafeLeft ->
            Evergreen.V126.Tile.RailStrafeLeft

        Evergreen.V125.Tile.RailStrafeRight ->
            Evergreen.V126.Tile.RailStrafeRight

        Evergreen.V125.Tile.TrainHouseRight ->
            Evergreen.V126.Tile.TrainHouseRight

        Evergreen.V125.Tile.TrainHouseLeft ->
            Evergreen.V126.Tile.TrainHouseLeft

        Evergreen.V125.Tile.RailStrafeDownSmall ->
            Evergreen.V126.Tile.RailStrafeDownSmall

        Evergreen.V125.Tile.RailStrafeUpSmall ->
            Evergreen.V126.Tile.RailStrafeUpSmall

        Evergreen.V125.Tile.RailStrafeLeftSmall ->
            Evergreen.V126.Tile.RailStrafeLeftSmall

        Evergreen.V125.Tile.RailStrafeRightSmall ->
            Evergreen.V126.Tile.RailStrafeRightSmall

        Evergreen.V125.Tile.Sidewalk ->
            Evergreen.V126.Tile.Sidewalk

        Evergreen.V125.Tile.SidewalkHorizontalRailCrossing ->
            Evergreen.V126.Tile.SidewalkHorizontalRailCrossing

        Evergreen.V125.Tile.SidewalkVerticalRailCrossing ->
            Evergreen.V126.Tile.SidewalkVerticalRailCrossing

        Evergreen.V125.Tile.RailBottomToRight_SplitLeft ->
            Evergreen.V126.Tile.RailBottomToRight_SplitLeft

        Evergreen.V125.Tile.RailBottomToLeft_SplitUp ->
            Evergreen.V126.Tile.RailBottomToLeft_SplitUp

        Evergreen.V125.Tile.RailTopToRight_SplitDown ->
            Evergreen.V126.Tile.RailTopToRight_SplitDown

        Evergreen.V125.Tile.RailTopToLeft_SplitRight ->
            Evergreen.V126.Tile.RailTopToLeft_SplitRight

        Evergreen.V125.Tile.RailBottomToRight_SplitUp ->
            Evergreen.V126.Tile.RailBottomToRight_SplitUp

        Evergreen.V125.Tile.RailBottomToLeft_SplitRight ->
            Evergreen.V126.Tile.RailBottomToLeft_SplitRight

        Evergreen.V125.Tile.RailTopToRight_SplitLeft ->
            Evergreen.V126.Tile.RailTopToRight_SplitLeft

        Evergreen.V125.Tile.RailTopToLeft_SplitDown ->
            Evergreen.V126.Tile.RailTopToLeft_SplitDown

        Evergreen.V125.Tile.PostOffice ->
            Evergreen.V126.Tile.PostOffice

        Evergreen.V125.Tile.PineTree1 ->
            Evergreen.V126.Tile.PineTree1

        Evergreen.V125.Tile.PineTree2 ->
            Evergreen.V126.Tile.PineTree2

        Evergreen.V125.Tile.BigPineTree ->
            Evergreen.V126.Tile.BigPineTree

        Evergreen.V125.Tile.LogCabinDown ->
            Evergreen.V126.Tile.LogCabinDown

        Evergreen.V125.Tile.LogCabinRight ->
            Evergreen.V126.Tile.LogCabinRight

        Evergreen.V125.Tile.LogCabinUp ->
            Evergreen.V126.Tile.LogCabinUp

        Evergreen.V125.Tile.LogCabinLeft ->
            Evergreen.V126.Tile.LogCabinLeft

        Evergreen.V125.Tile.RoadHorizontal ->
            Evergreen.V126.Tile.RoadHorizontal

        Evergreen.V125.Tile.RoadVertical ->
            Evergreen.V126.Tile.RoadVertical

        Evergreen.V125.Tile.RoadBottomToLeft ->
            Evergreen.V126.Tile.RoadBottomToLeft

        Evergreen.V125.Tile.RoadTopToLeft ->
            Evergreen.V126.Tile.RoadTopToLeft

        Evergreen.V125.Tile.RoadTopToRight ->
            Evergreen.V126.Tile.RoadTopToRight

        Evergreen.V125.Tile.RoadBottomToRight ->
            Evergreen.V126.Tile.RoadBottomToRight

        Evergreen.V125.Tile.Road4Way ->
            Evergreen.V126.Tile.Road4Way

        Evergreen.V125.Tile.RoadSidewalkCrossingHorizontal ->
            Evergreen.V126.Tile.RoadSidewalkCrossingHorizontal

        Evergreen.V125.Tile.RoadSidewalkCrossingVertical ->
            Evergreen.V126.Tile.RoadSidewalkCrossingVertical

        Evergreen.V125.Tile.Road3WayDown ->
            Evergreen.V126.Tile.Road3WayDown

        Evergreen.V125.Tile.Road3WayLeft ->
            Evergreen.V126.Tile.Road3WayLeft

        Evergreen.V125.Tile.Road3WayUp ->
            Evergreen.V126.Tile.Road3WayUp

        Evergreen.V125.Tile.Road3WayRight ->
            Evergreen.V126.Tile.Road3WayRight

        Evergreen.V125.Tile.RoadRailCrossingHorizontal ->
            Evergreen.V126.Tile.RoadRailCrossingHorizontal

        Evergreen.V125.Tile.RoadRailCrossingVertical ->
            Evergreen.V126.Tile.RoadRailCrossingVertical

        Evergreen.V125.Tile.FenceHorizontal ->
            Evergreen.V126.Tile.FenceHorizontal

        Evergreen.V125.Tile.FenceVertical ->
            Evergreen.V126.Tile.FenceVertical

        Evergreen.V125.Tile.FenceDiagonal ->
            Evergreen.V126.Tile.FenceDiagonal

        Evergreen.V125.Tile.FenceAntidiagonal ->
            Evergreen.V126.Tile.FenceAntidiagonal

        Evergreen.V125.Tile.RoadDeadendUp ->
            Evergreen.V126.Tile.RoadDeadendUp

        Evergreen.V125.Tile.RoadDeadendDown ->
            Evergreen.V126.Tile.RoadDeadendDown

        Evergreen.V125.Tile.BusStopDown ->
            Evergreen.V126.Tile.BusStopDown

        Evergreen.V125.Tile.BusStopLeft ->
            Evergreen.V126.Tile.BusStopLeft

        Evergreen.V125.Tile.BusStopRight ->
            Evergreen.V126.Tile.BusStopRight

        Evergreen.V125.Tile.BusStopUp ->
            Evergreen.V126.Tile.BusStopUp

        Evergreen.V125.Tile.HospitalDown ->
            Evergreen.V126.Tile.HospitalDown

        Evergreen.V125.Tile.HospitalLeft ->
            Evergreen.V126.Tile.HospitalLeft

        Evergreen.V125.Tile.HospitalUp ->
            Evergreen.V126.Tile.HospitalUp

        Evergreen.V125.Tile.HospitalRight ->
            Evergreen.V126.Tile.HospitalRight

        Evergreen.V125.Tile.Statue ->
            Evergreen.V126.Tile.Statue

        Evergreen.V125.Tile.HedgeRowDown ->
            Evergreen.V126.Tile.HedgeRowDown

        Evergreen.V125.Tile.HedgeRowLeft ->
            Evergreen.V126.Tile.HedgeRowLeft

        Evergreen.V125.Tile.HedgeRowRight ->
            Evergreen.V126.Tile.HedgeRowRight

        Evergreen.V125.Tile.HedgeRowUp ->
            Evergreen.V126.Tile.HedgeRowUp

        Evergreen.V125.Tile.HedgeCornerDownLeft ->
            Evergreen.V126.Tile.HedgeCornerDownLeft

        Evergreen.V125.Tile.HedgeCornerDownRight ->
            Evergreen.V126.Tile.HedgeCornerDownRight

        Evergreen.V125.Tile.HedgeCornerUpLeft ->
            Evergreen.V126.Tile.HedgeCornerUpLeft

        Evergreen.V125.Tile.HedgeCornerUpRight ->
            Evergreen.V126.Tile.HedgeCornerUpRight

        Evergreen.V125.Tile.HedgePillarDownLeft ->
            Evergreen.V126.Tile.HedgePillarDownLeft

        Evergreen.V125.Tile.HedgePillarDownRight ->
            Evergreen.V126.Tile.HedgePillarDownRight

        Evergreen.V125.Tile.HedgePillarUpLeft ->
            Evergreen.V126.Tile.HedgePillarUpLeft

        Evergreen.V125.Tile.HedgePillarUpRight ->
            Evergreen.V126.Tile.HedgePillarUpRight

        Evergreen.V125.Tile.ApartmentDown ->
            Evergreen.V126.Tile.ApartmentDown

        Evergreen.V125.Tile.ApartmentLeft ->
            Evergreen.V126.Tile.ApartmentLeft

        Evergreen.V125.Tile.ApartmentRight ->
            Evergreen.V126.Tile.ApartmentRight

        Evergreen.V125.Tile.ApartmentUp ->
            Evergreen.V126.Tile.ApartmentUp

        Evergreen.V125.Tile.RockDown ->
            Evergreen.V126.Tile.RockDown

        Evergreen.V125.Tile.RockLeft ->
            Evergreen.V126.Tile.RockLeft

        Evergreen.V125.Tile.RockRight ->
            Evergreen.V126.Tile.RockRight

        Evergreen.V125.Tile.RockUp ->
            Evergreen.V126.Tile.RockUp

        Evergreen.V125.Tile.Flowers1 ->
            Evergreen.V126.Tile.Flowers1

        Evergreen.V125.Tile.Flowers2 ->
            Evergreen.V126.Tile.Flowers2

        Evergreen.V125.Tile.ElmTree ->
            Evergreen.V126.Tile.ElmTree

        Evergreen.V125.Tile.DirtPathHorizontal ->
            Evergreen.V126.Tile.DirtPathHorizontal

        Evergreen.V125.Tile.DirtPathVertical ->
            Evergreen.V126.Tile.DirtPathVertical

        Evergreen.V125.Tile.BigText p0 ->
            Evergreen.V126.Tile.BigText p0

        Evergreen.V125.Tile.HyperlinkTile p0 ->
            Evergreen.V126.Tile.HyperlinkTile (p0 |> migrate_Hyperlink_Hyperlink)

        Evergreen.V125.Tile.BenchDown ->
            Evergreen.V126.Tile.BenchDown

        Evergreen.V125.Tile.BenchLeft ->
            Evergreen.V126.Tile.BenchLeft

        Evergreen.V125.Tile.BenchUp ->
            Evergreen.V126.Tile.BenchUp

        Evergreen.V125.Tile.BenchRight ->
            Evergreen.V126.Tile.BenchRight

        Evergreen.V125.Tile.ParkingDown ->
            Evergreen.V126.Tile.ParkingDown

        Evergreen.V125.Tile.ParkingLeft ->
            Evergreen.V126.Tile.ParkingLeft

        Evergreen.V125.Tile.ParkingUp ->
            Evergreen.V126.Tile.ParkingUp

        Evergreen.V125.Tile.ParkingRight ->
            Evergreen.V126.Tile.ParkingRight

        Evergreen.V125.Tile.ParkingRoad ->
            Evergreen.V126.Tile.ParkingRoad

        Evergreen.V125.Tile.ParkingRoundabout ->
            Evergreen.V126.Tile.ParkingRoundabout

        Evergreen.V125.Tile.CornerHouseUpLeft ->
            Evergreen.V126.Tile.CornerHouseUpLeft

        Evergreen.V125.Tile.CornerHouseUpRight ->
            Evergreen.V126.Tile.CornerHouseUpRight

        Evergreen.V125.Tile.CornerHouseDownLeft ->
            Evergreen.V126.Tile.CornerHouseDownLeft

        Evergreen.V125.Tile.CornerHouseDownRight ->
            Evergreen.V126.Tile.CornerHouseDownRight

        Evergreen.V125.Tile.DogHouseDown ->
            Evergreen.V126.Tile.DogHouseDown

        Evergreen.V125.Tile.DogHouseRight ->
            Evergreen.V126.Tile.DogHouseRight

        Evergreen.V125.Tile.DogHouseUp ->
            Evergreen.V126.Tile.DogHouseUp

        Evergreen.V125.Tile.DogHouseLeft ->
            Evergreen.V126.Tile.DogHouseLeft

        Evergreen.V125.Tile.Mushroom1 ->
            Evergreen.V126.Tile.Mushroom1

        Evergreen.V125.Tile.Mushroom2 ->
            Evergreen.V126.Tile.Mushroom2

        Evergreen.V125.Tile.TreeStump1 ->
            Evergreen.V126.Tile.TreeStump1

        Evergreen.V125.Tile.TreeStump2 ->
            Evergreen.V126.Tile.TreeStump2

        Evergreen.V125.Tile.Sunflowers ->
            Evergreen.V126.Tile.Sunflowers

        Evergreen.V125.Tile.RailDeadEndLeft ->
            Evergreen.V126.Tile.RailDeadEndLeft

        Evergreen.V125.Tile.RailDeadEndRight ->
            Evergreen.V126.Tile.RailDeadEndRight

        Evergreen.V125.Tile.RailStrafeLeftToRight_SplitUp ->
            Evergreen.V126.Tile.RailStrafeLeftToRight_SplitUp

        Evergreen.V125.Tile.RailStrafeLeftToRight_SplitDown ->
            Evergreen.V126.Tile.RailStrafeLeftToRight_SplitDown

        Evergreen.V125.Tile.RailStrafeRightToLeft_SplitUp ->
            Evergreen.V126.Tile.RailStrafeRightToLeft_SplitUp

        Evergreen.V125.Tile.RailStrafeRightToLeft_SplitDown ->
            Evergreen.V126.Tile.RailStrafeRightToLeft_SplitDown

        Evergreen.V125.Tile.RailStrafeTopToBottom_SplitLeft ->
            Evergreen.V126.Tile.RailStrafeTopToBottom_SplitLeft

        Evergreen.V125.Tile.RailStrafeTopToBottom_SplitRight ->
            Evergreen.V126.Tile.RailStrafeTopToBottom_SplitRight

        Evergreen.V125.Tile.RailStrafeBottomToTop_SplitLeft ->
            Evergreen.V126.Tile.RailStrafeBottomToTop_SplitLeft

        Evergreen.V125.Tile.RailStrafeBottomToTop_SplitRight ->
            Evergreen.V126.Tile.RailStrafeBottomToTop_SplitRight

        Evergreen.V125.Tile.RoadManholeDown ->
            Evergreen.V126.Tile.RoadManholeDown

        Evergreen.V125.Tile.RoadManholeLeft ->
            Evergreen.V126.Tile.RoadManholeLeft

        Evergreen.V125.Tile.RoadManholeUp ->
            Evergreen.V126.Tile.RoadManholeUp

        Evergreen.V125.Tile.RoadManholeRight ->
            Evergreen.V126.Tile.RoadManholeRight

        Evergreen.V125.Tile.BerryBush1 ->
            Evergreen.V126.Tile.BerryBush1

        Evergreen.V125.Tile.BerryBush2 ->
            Evergreen.V126.Tile.BerryBush2

        Evergreen.V125.Tile.SmallHouseDown ->
            Evergreen.V126.Tile.SmallHouseDown

        Evergreen.V125.Tile.SmallHouseLeft ->
            Evergreen.V126.Tile.SmallHouseLeft

        Evergreen.V125.Tile.SmallHouseUp ->
            Evergreen.V126.Tile.SmallHouseUp

        Evergreen.V125.Tile.SmallHouseRight ->
            Evergreen.V126.Tile.SmallHouseRight

        Evergreen.V125.Tile.OfficeDown ->
            Evergreen.V126.Tile.OfficeDown

        Evergreen.V125.Tile.OfficeUp ->
            Evergreen.V126.Tile.OfficeUp

        Evergreen.V125.Tile.FireTruckGarage ->
            Evergreen.V126.Tile.FireTruckGarage

        Evergreen.V125.Tile.TownHouse0 ->
            Evergreen.V126.Tile.TownHouse0

        Evergreen.V125.Tile.TownHouse1 ->
            Evergreen.V126.Tile.TownHouse1

        Evergreen.V125.Tile.TownHouse2 ->
            Evergreen.V126.Tile.TownHouse2

        Evergreen.V125.Tile.TownHouse3 ->
            Evergreen.V126.Tile.TownHouse3

        Evergreen.V125.Tile.TownHouse4 ->
            Evergreen.V126.Tile.TownHouse4

        Evergreen.V125.Tile.RowHouse0 ->
            Evergreen.V126.Tile.RowHouse0

        Evergreen.V125.Tile.RowHouse1 ->
            Evergreen.V126.Tile.RowHouse1

        Evergreen.V125.Tile.RowHouse2 ->
            Evergreen.V126.Tile.RowHouse2

        Evergreen.V125.Tile.RowHouse3 ->
            Evergreen.V126.Tile.RowHouse3

        Evergreen.V125.Tile.WideParkingDown ->
            Evergreen.V126.Tile.WideParkingDown

        Evergreen.V125.Tile.WideParkingLeft ->
            Evergreen.V126.Tile.WideParkingLeft

        Evergreen.V125.Tile.WideParkingUp ->
            Evergreen.V126.Tile.WideParkingUp

        Evergreen.V125.Tile.WideParkingRight ->
            Evergreen.V126.Tile.WideParkingRight

        Evergreen.V125.Tile.Gazebo ->
            Evergreen.V126.Tile.Gazebo

        Evergreen.V125.Tile.ConvenienceStoreDown ->
            Evergreen.V126.Tile.ConvenienceStoreDown

        Evergreen.V125.Tile.ConvenienceStoreUp ->
            Evergreen.V126.Tile.ConvenienceStoreUp

        Evergreen.V125.Tile.BeautySalonDown ->
            Evergreen.V126.Tile.BeautySalonDown

        Evergreen.V125.Tile.BeautySalonUp ->
            Evergreen.V126.Tile.BeautySalonUp

        Evergreen.V125.Tile.CheckmartDown ->
            Evergreen.V126.Tile.CheckmartDown

        Evergreen.V125.Tile.CheckmartUp ->
            Evergreen.V126.Tile.CheckmartUp

        Evergreen.V125.Tile.TreeStoreDown ->
            Evergreen.V126.Tile.TreeStoreDown

        Evergreen.V125.Tile.TreeStoreUp ->
            Evergreen.V126.Tile.TreeStoreUp

        Evergreen.V125.Tile.IronFenceHorizontal ->
            Evergreen.V126.Tile.IronFenceHorizontal

        Evergreen.V125.Tile.IronFenceDiagonal ->
            Evergreen.V126.Tile.IronFenceDiagonal

        Evergreen.V125.Tile.IronFenceVertical ->
            Evergreen.V126.Tile.IronFenceVertical

        Evergreen.V125.Tile.IronFenceAntidiagonal ->
            Evergreen.V126.Tile.IronFenceAntidiagonal

        Evergreen.V125.Tile.IronGate ->
            Evergreen.V126.Tile.IronGate

        Evergreen.V125.Tile.DeadTree ->
            Evergreen.V126.Tile.DeadTree

        Evergreen.V125.Tile.PumpkinDown ->
            Evergreen.V126.Tile.PumpkinDown

        Evergreen.V125.Tile.PumpkinUp ->
            Evergreen.V126.Tile.PumpkinUp

        Evergreen.V125.Tile.GraveStone0 ->
            Evergreen.V126.Tile.GraveStone0

        Evergreen.V125.Tile.GraveStone1 ->
            Evergreen.V126.Tile.GraveStone1

        Evergreen.V125.Tile.GraveStone2 ->
            Evergreen.V126.Tile.GraveStone2

        Evergreen.V125.Tile.GraveStone3 ->
            Evergreen.V126.Tile.GraveStone3

        Evergreen.V125.Tile.GraveStone4 ->
            Evergreen.V126.Tile.GraveStone4

        Evergreen.V125.Tile.GraveStone5 ->
            Evergreen.V126.Tile.GraveStone5

        Evergreen.V125.Tile.GraveStone6 ->
            Evergreen.V126.Tile.GraveStone6

        Evergreen.V125.Tile.GraveStone7 ->
            Evergreen.V126.Tile.GraveStone7


migrate_Tile_TileGroup : Evergreen.V125.Tile.TileGroup -> Evergreen.V126.Tile.TileGroup
migrate_Tile_TileGroup old =
    case old of
        Evergreen.V125.Tile.EmptyTileGroup ->
            Evergreen.V126.Tile.EmptyTileGroup

        Evergreen.V125.Tile.HouseGroup ->
            Evergreen.V126.Tile.HouseGroup

        Evergreen.V125.Tile.RailStraightGroup ->
            Evergreen.V126.Tile.RailStraightGroup

        Evergreen.V125.Tile.RailTurnGroup ->
            Evergreen.V126.Tile.RailTurnGroup

        Evergreen.V125.Tile.RailTurnLargeGroup ->
            Evergreen.V126.Tile.RailTurnLargeGroup

        Evergreen.V125.Tile.RailStrafeGroup ->
            Evergreen.V126.Tile.RailStrafeGroup

        Evergreen.V125.Tile.RailStrafeSmallGroup ->
            Evergreen.V126.Tile.RailStrafeSmallGroup

        Evergreen.V125.Tile.RailCrossingGroup ->
            Evergreen.V126.Tile.RailCrossingGroup

        Evergreen.V125.Tile.TrainHouseGroup ->
            Evergreen.V126.Tile.TrainHouseGroup

        Evergreen.V125.Tile.SidewalkGroup ->
            Evergreen.V126.Tile.SidewalkGroup

        Evergreen.V125.Tile.SidewalkRailGroup ->
            Evergreen.V126.Tile.SidewalkRailGroup

        Evergreen.V125.Tile.RailTurnSplitGroup ->
            Evergreen.V126.Tile.RailTurnSplitGroup

        Evergreen.V125.Tile.RailTurnSplitMirrorGroup ->
            Evergreen.V126.Tile.RailTurnSplitMirrorGroup

        Evergreen.V125.Tile.PostOfficeGroup ->
            Evergreen.V126.Tile.PostOfficeGroup

        Evergreen.V125.Tile.PineTreeGroup ->
            Evergreen.V126.Tile.PineTreeGroup

        Evergreen.V125.Tile.BigPineTreeGroup ->
            Evergreen.V126.Tile.BigPineTreeGroup

        Evergreen.V125.Tile.LogCabinGroup ->
            Evergreen.V126.Tile.LogCabinGroup

        Evergreen.V125.Tile.RoadStraightGroup ->
            Evergreen.V126.Tile.RoadStraightGroup

        Evergreen.V125.Tile.RoadTurnGroup ->
            Evergreen.V126.Tile.RoadTurnGroup

        Evergreen.V125.Tile.Road4WayGroup ->
            Evergreen.V126.Tile.Road4WayGroup

        Evergreen.V125.Tile.RoadSidewalkCrossingGroup ->
            Evergreen.V126.Tile.RoadSidewalkCrossingGroup

        Evergreen.V125.Tile.Road3WayGroup ->
            Evergreen.V126.Tile.Road3WayGroup

        Evergreen.V125.Tile.RoadRailCrossingGroup ->
            Evergreen.V126.Tile.RoadRailCrossingGroup

        Evergreen.V125.Tile.RoadDeadendGroup ->
            Evergreen.V126.Tile.RoadDeadendGroup

        Evergreen.V125.Tile.FenceStraightGroup ->
            Evergreen.V126.Tile.FenceStraightGroup

        Evergreen.V125.Tile.BusStopGroup ->
            Evergreen.V126.Tile.BusStopGroup

        Evergreen.V125.Tile.HospitalGroup ->
            Evergreen.V126.Tile.HospitalGroup

        Evergreen.V125.Tile.StatueGroup ->
            Evergreen.V126.Tile.StatueGroup

        Evergreen.V125.Tile.HedgeRowGroup ->
            Evergreen.V126.Tile.HedgeRowGroup

        Evergreen.V125.Tile.HedgeCornerGroup ->
            Evergreen.V126.Tile.HedgeCornerGroup

        Evergreen.V125.Tile.HedgePillarGroup ->
            Evergreen.V126.Tile.HedgePillarGroup

        Evergreen.V125.Tile.ApartmentGroup ->
            Evergreen.V126.Tile.ApartmentGroup

        Evergreen.V125.Tile.RockGroup ->
            Evergreen.V126.Tile.RockGroup

        Evergreen.V125.Tile.FlowersGroup ->
            Evergreen.V126.Tile.FlowersGroup

        Evergreen.V125.Tile.ElmTreeGroup ->
            Evergreen.V126.Tile.ElmTreeGroup

        Evergreen.V125.Tile.DirtPathGroup ->
            Evergreen.V126.Tile.DirtPathGroup

        Evergreen.V125.Tile.BigTextGroup ->
            Evergreen.V126.Tile.BigTextGroup

        Evergreen.V125.Tile.HyperlinkGroup ->
            Evergreen.V126.Tile.HyperlinkGroup

        Evergreen.V125.Tile.BenchGroup ->
            Evergreen.V126.Tile.BenchGroup

        Evergreen.V125.Tile.ParkingLotGroup ->
            Evergreen.V126.Tile.ParkingLotGroup

        Evergreen.V125.Tile.ParkingRoadGroup ->
            Evergreen.V126.Tile.ParkingRoadGroup

        Evergreen.V125.Tile.ParkingRoundaboutGroup ->
            Evergreen.V126.Tile.ParkingRoundaboutGroup

        Evergreen.V125.Tile.CornerHouseGroup ->
            Evergreen.V126.Tile.CornerHouseGroup

        Evergreen.V125.Tile.DogHouseGroup ->
            Evergreen.V126.Tile.DogHouseGroup

        Evergreen.V125.Tile.MushroomGroup ->
            Evergreen.V126.Tile.MushroomGroup

        Evergreen.V125.Tile.TreeStumpGroup ->
            Evergreen.V126.Tile.TreeStumpGroup

        Evergreen.V125.Tile.SunflowersGroup ->
            Evergreen.V126.Tile.SunflowersGroup

        Evergreen.V125.Tile.RailDeadendGroup ->
            Evergreen.V126.Tile.RailDeadendGroup

        Evergreen.V125.Tile.RailStrafeSplitGroup ->
            Evergreen.V126.Tile.RailStrafeSplitGroup

        Evergreen.V125.Tile.RailStrafeSplitMirrorGroup ->
            Evergreen.V126.Tile.RailStrafeSplitMirrorGroup

        Evergreen.V125.Tile.RoadStraightManholeGroup ->
            Evergreen.V126.Tile.RoadStraightManholeGroup

        Evergreen.V125.Tile.BerryBushGroup ->
            Evergreen.V126.Tile.BerryBushGroup

        Evergreen.V125.Tile.SmallHouseGroup ->
            Evergreen.V126.Tile.SmallHouseGroup

        Evergreen.V125.Tile.OfficeGroup ->
            Evergreen.V126.Tile.OfficeGroup

        Evergreen.V125.Tile.FireTruckGarageGroup ->
            Evergreen.V126.Tile.FireTruckGarageGroup

        Evergreen.V125.Tile.TownHouseGroup ->
            Evergreen.V126.Tile.TownHouseGroup

        Evergreen.V125.Tile.RowHouseGroup ->
            Evergreen.V126.Tile.RowHouseGroup

        Evergreen.V125.Tile.WideParkingLotGroup ->
            Evergreen.V126.Tile.WideParkingLotGroup

        Evergreen.V125.Tile.GazeboGroup ->
            Evergreen.V126.Tile.GazeboGroup

        Evergreen.V125.Tile.ConvenienceStoreGroup ->
            Evergreen.V126.Tile.ConvenienceStoreGroup

        Evergreen.V125.Tile.BeautySalonGroup ->
            Evergreen.V126.Tile.BeautySalonGroup

        Evergreen.V125.Tile.CheckmartGroup ->
            Evergreen.V126.Tile.CheckmartGroup

        Evergreen.V125.Tile.TreeStoreGroup ->
            Evergreen.V126.Tile.TreeStoreGroup

        Evergreen.V125.Tile.IronFenceGroup ->
            Evergreen.V126.Tile.IronFenceGroup

        Evergreen.V125.Tile.IronGateGroup ->
            Evergreen.V126.Tile.IronGateGroup

        Evergreen.V125.Tile.DeadTreeGroup ->
            Evergreen.V126.Tile.DeadTreeGroup

        Evergreen.V125.Tile.PumpkinGroup ->
            Evergreen.V126.Tile.PumpkinGroup

        Evergreen.V125.Tile.GraveStoneGroup ->
            Evergreen.V126.Tile.GraveStoneGroup


migrate_TimeOfDay_TimeOfDay : Evergreen.V125.TimeOfDay.TimeOfDay -> Evergreen.V126.TimeOfDay.TimeOfDay
migrate_TimeOfDay_TimeOfDay old =
    case old of
        Evergreen.V125.TimeOfDay.Automatic ->
            Evergreen.V126.TimeOfDay.Automatic

        Evergreen.V125.TimeOfDay.AlwaysDay ->
            Evergreen.V126.TimeOfDay.AlwaysDay

        Evergreen.V125.TimeOfDay.AlwaysNight ->
            Evergreen.V126.TimeOfDay.AlwaysNight


migrate_Train_IsStuckOrDerailed : Evergreen.V125.Train.IsStuckOrDerailed -> Evergreen.V126.Train.IsStuckOrDerailed
migrate_Train_IsStuckOrDerailed old =
    case old of
        Evergreen.V125.Train.IsStuck p0 ->
            Evergreen.V126.Train.IsStuck p0

        Evergreen.V125.Train.IsDerailed p0 p1 ->
            Evergreen.V126.Train.IsDerailed p0 (p1 |> migrate_Id_Id)

        Evergreen.V125.Train.IsNotStuckOrDerailed ->
            Evergreen.V126.Train.IsNotStuckOrDerailed


migrate_Train_PreviousPath : Evergreen.V125.Train.PreviousPath -> Evergreen.V126.Train.PreviousPath
migrate_Train_PreviousPath old =
    { position = old.position |> migrate_Coord_Coord
    , path = old.path |> migrate_Tile_RailPath
    , reversed = old.reversed
    }


migrate_Train_Status : Evergreen.V125.Train.Status -> Evergreen.V126.Train.Status
migrate_Train_Status old =
    case old of
        Evergreen.V125.Train.WaitingAtHome ->
            Evergreen.V126.Train.WaitingAtHome

        Evergreen.V125.Train.TeleportingHome p0 ->
            Evergreen.V126.Train.TeleportingHome p0

        Evergreen.V125.Train.Travelling p0 ->
            Evergreen.V126.Train.Travelling p0

        Evergreen.V125.Train.StoppedAtPostOffice p0 ->
            Evergreen.V126.Train.StoppedAtPostOffice
                { time = p0.time
                , userId = p0.userId |> migrate_Id_Id
                }


migrate_Train_Train : Evergreen.V125.Train.Train -> Evergreen.V126.Train.Train
migrate_Train_Train old =
    case old of
        Evergreen.V125.Train.Train p0 ->
            Evergreen.V126.Train.Train
                { position = p0.position |> migrate_Coord_Coord
                , path = p0.path |> migrate_Tile_RailPath
                , previousPaths = p0.previousPaths |> List.map migrate_Train_PreviousPath
                , t = p0.t
                , speed = p0.speed |> migrate_Quantity_Quantity
                , home = p0.home |> migrate_Coord_Coord
                , homePath = p0.homePath |> migrate_Tile_RailPath
                , isStuckOrDerailed = p0.isStuckOrDerailed |> migrate_Train_IsStuckOrDerailed
                , status = p0.status |> migrate_Train_Status
                , owner = p0.owner |> migrate_Id_Id
                , color = p0.color |> migrate_Color_Color
                }


migrate_Types_BackendError : Evergreen.V125.Types.BackendError -> Evergreen.V126.Types.BackendError
migrate_Types_BackendError old =
    case old of
        Evergreen.V125.Types.PostmarkError p0 p1 ->
            Evergreen.V126.Types.PostmarkError (p0 |> migrate_EmailAddress_EmailAddress) p1

        Evergreen.V125.Types.UserNotFoundWhenLoggingIn p0 ->
            Evergreen.V126.Types.UserNotFoundWhenLoggingIn (p0 |> migrate_Id_Id)


migrate_Types_BackendUserData : Evergreen.V125.Types.BackendUserData -> Evergreen.V126.Types.BackendUserData
migrate_Types_BackendUserData old =
    { undoHistory = old.undoHistory
    , redoHistory = old.redoHistory
    , undoCurrent = old.undoCurrent
    , mailDrafts = old.mailDrafts |> migrate_IdDict_IdDict (List.map migrate_MailEditor_Content)
    , cursor = old.cursor |> Maybe.map migrate_Cursor_Cursor
    , handColor = old.handColor |> migrate_Color_Colors
    , userType = old.userType |> migrate_Types_BackendUserType
    , name = old.name |> migrate_DisplayName_DisplayName
    }


migrate_Types_BackendUserType : Evergreen.V125.Types.BackendUserType -> Evergreen.V126.Types.BackendUserType
migrate_Types_BackendUserType old =
    case old of
        Evergreen.V125.Types.HumanUser p0 ->
            Evergreen.V126.Types.HumanUser (p0 |> migrate_Types_HumanUserData)

        Evergreen.V125.Types.BotUser ->
            Evergreen.V126.Types.BotUser


migrate_Types_EmailResult : Evergreen.V125.Types.EmailResult -> Evergreen.V126.Types.EmailResult
migrate_Types_EmailResult old =
    case old of
        Evergreen.V125.Types.EmailSending ->
            Evergreen.V126.Types.EmailSending

        Evergreen.V125.Types.EmailSendFailed p0 ->
            Evergreen.V126.Types.EmailSendFailed p0

        Evergreen.V125.Types.EmailSent p0 ->
            Evergreen.V126.Types.EmailSent (p0 |> migrate_Postmark_PostmarkSendResponse)


migrate_Types_HumanUserData : Evergreen.V125.Types.HumanUserData -> Evergreen.V126.Types.HumanUserData
migrate_Types_HumanUserData old =
    { emailAddress = old.emailAddress |> migrate_EmailAddress_EmailAddress
    , acceptedInvites = old.acceptedInvites |> migrate_IdDict_IdDict identity
    , timeOfDay = old.timeOfDay |> migrate_TimeOfDay_TimeOfDay
    , tileHotkeys = old.tileHotkeys |> migrate_AssocList_Dict migrate_Change_TileHotkey migrate_Tile_TileGroup
    , showNotifications = old.showNotifications
    , notificationsClearedAt = old.notificationsClearedAt
    , allowEmailNotifications = old.allowEmailNotifications
    , hyperlinksVisited = old.hyperlinksVisited
    }


migrate_Types_Invite : Evergreen.V125.Types.Invite -> Evergreen.V126.Types.Invite
migrate_Types_Invite old =
    { invitedBy = old.invitedBy |> migrate_Id_Id
    , invitedAt = old.invitedAt
    , invitedEmailAddress = old.invitedEmailAddress |> migrate_EmailAddress_EmailAddress
    , emailResult = old.emailResult |> migrate_Types_EmailResult
    }


migrate_User_InviteTree : Evergreen.V125.User.InviteTree -> Evergreen.V126.User.InviteTree
migrate_User_InviteTree old =
    case old of
        Evergreen.V125.User.InviteTree p0 ->
            Evergreen.V126.User.InviteTree
                { userId = p0.userId |> migrate_Id_Id
                , invited = p0.invited |> List.map migrate_User_InviteTree
                }
